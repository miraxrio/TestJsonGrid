[{"id":196,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"31d328e3-6ab9-5294-9f8d-3703cd408da9","name":"Amazon EC2 - Unsecured Ports","service":"Amazon EC2","phase":"r","description":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22\r\n\r\nThis control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \r\n  \r\nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"-","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":true,"keyphrase":[3]},{"id":195,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"31d328e3-6ab9-5294-9f8d-3703cd408da9","name":"Amazon EC2 - Unsecured Ports","service":"Amazon EC2","phase":"r","description":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22\r\n\r\nThis control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \r\n  \r\nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"-","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":true,"keyphrase":[3]},{"id":212,"card_id":"None","find_id":"1b3309bf-d108-52c3-98be-9117d65f19b3","name":"Root User MFA Enable","service":"aws","phase":"r","description":"MFA should be enabled for the root user\r\n\r\nThe root user has complete access to all the services and resources in an AWS account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to the AWS Management Console, they're prompted for their user name and password and for an authentication code from their AWS MFA device.","severity":"Critical","details":"The root user has complete access to all the services and resources in an AWS account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to the AWS Management Console, they're prompted for their user name and password and for an authentication code from their AWS MFA device.  \r\n  \r\nWhen you use virtual MFA for the root user, CIS recommends that the device used is _not_ a personal device. Instead, use a dedicated mobile device (tablet or phone) that you manage to keep charged and secured independent of any individual personal devices. This lessens the risks of losing access to the MFA due to device loss, device trade-in, or if the individual owning the device is no longer employed at the company.","component":"securityhub","image":"-","remediation":"To enable MFA for the root user, see [Activate MFA on the AWS account root user](https://docs.aws.amazon.com/accounts/latest/reference/root-user-mfa.html) in the _AWS Account Management Reference Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":200,"card_id":"None","find_id":"321916f1-7810-5f71-b2b9-00f84c669c0c","name":"SSM documents should not be public","service":"aws","phase":"Recon","description":"This control checks whether AWS Systems Manager documents that are owned by the account are public. This control fails if SSM documents with the owner Self are public.","severity":"Critical","details":"This control checks whether AWS Systems Manager documents that are owned by the account are public. This control fails if SSM documents with the owner `Self` are public.  \n  \nSSM documents that are public might allow unintended access to your documents. A public SSM document can expose valuable information about your account, resources, and internal processes.  \n  \nUnless your use case requires public sharing, we recommend that you block public sharing setting for Systems Manager documents that are owned by `Self`.","component":"securityhub","image":"","remediation":"To block public sharing for SSM documents, see [Block public sharing for SSM documents](https://docs.aws.amazon.com/systems-manager/latest/userguide/documents-ssm-sharing.html#block-public-access) in the _AWS Systems Manager User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":161,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"dcea8b02-78dd-5de7-95f1-628f7bea2b84","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Critical","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":160,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d6b51568-babc-5a25-b662-b7ed9f3a334f","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Critical","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":159,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"05fec777-9fce-5117-a5bc-80334247b930","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Critical","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":206,"card_id":"None","find_id":"d26092ee-1a92-5d51-9350-29a4dddf14ff","name":"EBS Snapshot Public Restore","service":"aws","phase":"r","description":"This control checks whether Amazon Elastic Block Store snapshots are not public. The control fails if Amazon EBS snapshots are restorable by anyone.","severity":"Critical","details":"This control checks whether Amazon Elastic Block Store snapshots are not public. The control fails if Amazon EBS snapshots are restorable by anyone.  \r\n  \r\nEBS snapshots are used to back up the data on your EBS volumes to Amazon S3 at a specific point in time. You can use the snapshots to restore previous states of EBS volumes. It is rarely acceptable to share a snapshot with the public. Typically the decision to share a snapshot publicly was made in error or without a complete understanding of the implications. This check helps ensure that all such sharing was fully planned and intentional.  \r\n  \r\nTo make a public EBS snapshot private, see [Share a snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html#share-unencrypted-snapshot) in the _Amazon EC2 User Guide for Linux Instances_. For **Actions, Modify permissions**, choose **Private**.","component":"securityhub","image":"-","remediation":"This control checks whether Amazon Elastic Block Store snapshots are not public. The control fails if Amazon EBS snapshots are restorable by anyone.  \r\n  \r\nEBS snapshots are used to back up the data on your EBS volumes to Amazon S3 at a specific point in time. You can use the snapshots to restore previous states of EBS volumes. It is rarely acceptable to share a snapshot with the public. Typically the decision to share a snapshot publicly was made in error or without a complete understanding of the implications. This check helps ensure that all such sharing was fully planned and intentional.  \r\n  \r\nTo make a public EBS snapshot private, see [Share a snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html#share-unencrypted-snapshot) in the _Amazon EC2 User Guide for Linux Instances_. For **Actions, Modify permissions**, choose **Private**.","type":"aws","enable":false,"keyphrase":[3]},{"id":151,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"373af70d-2596-57aa-b847-64e4c1196348","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Critical","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":163,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"2767ce18-2d89-523b-9ba5-a51a2a509a92","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Critical","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":176,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"65e85463-691b-5bb7-8352-143cc5527dbb","name":"Lambda Public Access","service":"AWS Lambda","phase":"r","description":"Lambda function policies should prohibit public access\r\n\r\nThis control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.","severity":"Critical","details":"This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as `AWS:SourceAccount`. We recommend using other S3 conditions along with `AWS:SourceAccount` in your bucket policy for more refined access.  \r\n  \r\nThe Lambda function should not be publicly accessible, as this may allow unintended access to your function code.","component":"AwsFunction","image":"-","remediation":"To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the`AWS:SourceAccount` condition. You can only update the resource-based policy from the Lambda API or AWS CLI.  \r\n  \r\nTo start, [ review the resource-based policy](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html) on the Lambda console. Identify the policy statement that has`Principal` field values that make the policy public, such as `\"*\"` or `{ \"AWS\": \"*\" }`.  \r\n  \r\nYou cannot edit the policy from the console. To remove permissions from the function, run the [remove-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html) command from the AWS CLI.  \r\n  \r\n`` $ aws lambda remove-permission --function-name `<function-name>` --statement-id `<statement-id>` ``  \r\n  \r\nReplace `` `<function-name>` `` with the name of the Lambda function, and `` `<statement-id>` `` with the statement ID (`Sid`) of the statement that you want to remove.","type":"aws","enable":false,"keyphrase":[3]},{"id":175,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"9b33f514-2620-5e2a-8e99-b0842e441601","name":"Lambda Public Access","service":"AWS Lambda","phase":"r","description":"Lambda function policies should prohibit public access\r\n\r\nThis control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.","severity":"Critical","details":"This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as `AWS:SourceAccount`. We recommend using other S3 conditions along with `AWS:SourceAccount` in your bucket policy for more refined access.  \r\n  \r\nThe Lambda function should not be publicly accessible, as this may allow unintended access to your function code.","component":"AwsFunction","image":"-","remediation":"To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the`AWS:SourceAccount` condition. You can only update the resource-based policy from the Lambda API or AWS CLI.  \r\n  \r\nTo start, [ review the resource-based policy](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html) on the Lambda console. Identify the policy statement that has`Principal` field values that make the policy public, such as `\"*\"` or `{ \"AWS\": \"*\" }`.  \r\n  \r\nYou cannot edit the policy from the console. To remove permissions from the function, run the [remove-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html) command from the AWS CLI.  \r\n  \r\n`` $ aws lambda remove-permission --function-name `<function-name>` --statement-id `<statement-id>` ``  \r\n  \r\nReplace `` `<function-name>` `` with the name of the Lambda function, and `` `<statement-id>` `` with the statement ID (`Sid`) of the statement that you want to remove.","type":"aws","enable":false,"keyphrase":[3]},{"id":177,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"77df1996-37ca-5a12-b4d9-0205bc75b269","name":"Lambda Public Access","service":"AWS Lambda","phase":"r","description":"Lambda function policies should prohibit public access\r\n\r\nThis control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.","severity":"Critical","details":"This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as `AWS:SourceAccount`. We recommend using other S3 conditions along with `AWS:SourceAccount` in your bucket policy for more refined access.  \r\n  \r\nThe Lambda function should not be publicly accessible, as this may allow unintended access to your function code.","component":"AwsFunction","image":"-","remediation":"To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the`AWS:SourceAccount` condition. You can only update the resource-based policy from the Lambda API or AWS CLI.  \r\n  \r\nTo start, [ review the resource-based policy](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html) on the Lambda console. Identify the policy statement that has`Principal` field values that make the policy public, such as `\"*\"` or `{ \"AWS\": \"*\" }`.  \r\n  \r\nYou cannot edit the policy from the console. To remove permissions from the function, run the [remove-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html) command from the AWS CLI.  \r\n  \r\n`` $ aws lambda remove-permission --function-name `<function-name>` --statement-id `<statement-id>` ``  \r\n  \r\nReplace `` `<function-name>` `` with the name of the Lambda function, and `` `<statement-id>` `` with the statement ID (`Sid`) of the statement that you want to remove.","type":"aws","enable":false,"keyphrase":[3]},{"id":209,"card_id":"None","find_id":"ece743ce-3e07-54cb-9c75-8261e1623f02","name":"Hardware MFA for Root User","service":"aws","phase":"r","description":"Hardware MFA should be enabled for the root user\r\n\r\nThis control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.","severity":"Critical","details":"This control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.  \r\n  \r\nVirtual MFA might not provide the same level of security as hardware MFA devices. We recommend that you use only a virtual MFA device while you wait for hardware purchase approval or for your hardware to arrive. To learn more, see[ Enabling a virtual multi-factor authentication (MFA) device (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fvirtual.html) in the _IAM User Guide_.  \r\n  \r\nBoth time-based one-time password (TOTP) and Universal 2nd Factor (U2F) tokens are viable as hardware MFA options.","component":"securityhub","image":"-","remediation":"To add a hardware MFA device for the root user, see [Enable a hardware MFA device for the AWS account root user (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fphysical.html#enable-hw-mfa-for-root) in the _IAM User Guide_.  \r\n  \r\nWe are offering a free MFA security key to eligible customers. [See if you qualify, and order your free key](https://console.aws.amazon.com/securityhub/home/?region=us-east-1#/free-mfa-security-key/).","type":"aws","enable":false,"keyphrase":[3]},{"id":219,"card_id":"None","find_id":"2e160710-9780-5d78-bef0-801fadab264d","name":"Amazon EMR Public Access","service":"aws","phase":"r","description":"Amazon EMR block public access setting should be enabled\r\n\r\nThis control checks whether your account is configured with Amazon EMR block public access. The control fails if the block public access setting isn't enabled or if any port other than port 22 is allowed.","severity":"Critical","details":"This control checks whether your account is configured with Amazon EMR block public access. The control fails if the block public access setting isn't enabled or if any port other than port 22 is allowed.  \r\n  \r\nAmazon EMR block public access prevents you from launching a cluster in a public subnet if the cluster has a security configuration that allows inbound traffic from public IP addresses on a port. When a user from your AWS account launches a cluster, Amazon EMR checks the port rules in the security group for the cluster and compares them with your inbound traffic rules. If the security group has an inbound rule that opens ports to the public IP addresses IPv4 0.0.0.0/0 or IPv6 ::/0, and those ports aren't specified as exceptions for your account, Amazon EMR doesn't let the user create the cluster.  \r\n  \r\n###### Note\r\n\r\nBlock public access is enabled by default. To increase account protection, we recommend that you keep it enabled.","component":"securityhub","image":"-","remediation":"To configure block public access for Amazon EMR, see [Using Amazon EMR block public access](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-block-public-access.html) in the _Amazon EMR Management Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":211,"card_id":"None","find_id":"26fd1327-f16c-591f-a9a3-e8459d085e7f","name":"Hardware MFA for Root User","service":"aws","phase":"r","description":"Hardware MFA should be enabled for the root user\r\n\r\nThis control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.","severity":"Critical","details":"This control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.  \r\n  \r\nVirtual MFA might not provide the same level of security as hardware MFA devices. We recommend that you use only a virtual MFA device while you wait for hardware purchase approval or for your hardware to arrive. To learn more, see[ Enabling a virtual multi-factor authentication (MFA) device (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fvirtual.html) in the _IAM User Guide_.  \r\n  \r\nBoth time-based one-time password (TOTP) and Universal 2nd Factor (U2F) tokens are viable as hardware MFA options.","component":"securityhub","image":"-","remediation":"To add a hardware MFA device for the root user, see [Enable a hardware MFA device for the AWS account root user (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fphysical.html#enable-hw-mfa-for-root) in the _IAM User Guide_.  \r\n  \r\nWe are offering a free MFA security key to eligible customers. [See if you qualify, and order your free key](https://console.aws.amazon.com/securityhub/home/?region=us-east-1#/free-mfa-security-key/).","type":"aws","enable":false,"keyphrase":[3]},{"id":210,"card_id":"None","find_id":"306a76df-9ff7-50b4-a1ec-2e4fbf8d9800","name":"Redshift Public Access","service":"aws","phase":"r","description":"Amazon Redshift clusters should prohibit public access\r\n\r\nThis control checks whether Amazon Redshift clusters are publicly accessible. It evaluates the PubliclyAccessible field in the cluster configuration item.","severity":"Critical","details":"This control checks whether Amazon Redshift clusters are publicly accessible. It evaluates the `PubliclyAccessible` field in the cluster configuration item.   \r\n  \r\nThe `PubliclyAccessible` attribute of the Amazon Redshift cluster configuration indicates whether the cluster is publicly accessible. When the cluster is configured with `PubliclyAccessible` set to `true`, it is an Internet-facing instance that has a publicly resolvable DNS name, which resolves to a public IP address.  \r\n  \r\nWhen the cluster is not publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. Unless you intend for your cluster to be publicly accessible, the cluster should not be configured with `PubliclyAccessible` set to `true`.","component":"securityhub","image":"-","remediation":"To update an Amazon Redshift cluster to disable public access, see [Modifying a cluster](https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-console.html#modify-cluster) in the _Amazon Redshift Management Guide_. Set **Publicly accessible** to **No**.","type":"aws","enable":false,"keyphrase":[3]},{"id":166,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"627abe01-4167-53d1-85c0-c592226b7c82","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":167,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d4b2b8b8-6ab3-5bc5-a03e-447851de052c","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":168,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"1fa25188-a509-5b57-ac0a-7f8f11b5cbe6","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":147,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"de3009ef-f923-5505-8842-6553c708d0cf","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":170,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"a23b0771-6325-55dd-91e5-42f48f3951e0","name":"Amazon EC2 instances should not have a public IPv4 address","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether EC2 instances have a public IP address. The control fails if the publicIp field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.","severity":"High","details":"This control checks whether EC2 instances have a public IP address. The control fails if the `publicIp` field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.   \n  \nA public IPv4 address is an IP address that is reachable from the internet. If you launch your instance with a public IP address, then your EC2 instance is reachable from the internet. A private IPv4 address is an IP address that is not reachable from the internet. You can use private IPv4 addresses for communication between EC2 instances in the same VPC or in your connected private network.  \n  \nIPv6 addresses are globally unique, and therefore are reachable from the internet. However, by default all subnets have the IPv6 addressing attribute set to false. For more information about IPv6, see [IP addressing in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html) in the _Amazon VPC User Guide_.  \n  \nIf you have a legitimate use case to maintain EC2 instances with public IP addresses, then you can suppress the findings from this control. For more information about front-end architecture options, see the [AWS Architecture Blog](https://aws.amazon.com/blogs/architecture/) or the [This Is My Architecture series](https://aws.amazon.com/this-is-my-architecture/?tma.sort-by=item.additionalFields.airDate&tma.sort-order=desc&awsf.category=categories%23mobile).","component":"AwsInstance","image":"","remediation":"Use a non-default VPC so that your instance is not assigned a public IP address by default.  \n  \nWhen you launch an EC2 instance into a default VPC, it is assigned a public IP address. When you launch an EC2 instance into a non-default VPC, the subnet configuration determines whether it receives a public IP address. The subnet has an attribute to determine if new EC2 instances in the subnet receive a public IP address from the public IPv4 address pool.  \n  \nYou cannot manually associate or disassociate an automatically-assigned public IP address from your EC2 instance. To control whether your EC2 instance receives a public IP address, do one of the following:  \n  \n* Modify the public IP addressing attribute of your subnet. For more information, see [Modifying the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip) in the _Amazon VPC User Guide_.\n* Enable or disable the public IP addressing feature during launch. This overrides the subnet's public IP addressing attribute. For more information, see[ Assign a public IPv4 address during instance launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#public-ip-addresses) in the_Amazon EC2 User Guide for Linux Instances_.\n  \n  \nFor more information, see [Public IPv4 addresses and external DNS hostnames](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nIf your EC2 instance is associated with an Elastic IP address, then your EC2 instance is reachable from the internet. You can disassociate an Elastic IP address from an instance or network interface at any time. To disassociate an Elastic IP address, see [Disassociate an Elastic IP address ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#using-instance-addressing-eips-associating-different) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":171,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"16934762-83fb-5501-945b-87c4f5a4a838","name":"EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if HttpTokens is set to required for IMDSv2. The control fails if HttpTokens is set to optional.","severity":"High","details":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if `HttpTokens` is set to required for IMDSv2\\. The control fails if `HttpTokens` is set to `optional`.  \n  \nYou use instance metadata to configure or manage the running instance. The IMDS provides access to temporary, frequently rotated credentials. These credentials remove the need to hard code or distribute sensitive credentials to instances manually or programmatically. The IMDS is attached locally to every EC2 instance. It runs on a special \"link local\" IP address of 169.254.169.254\\. This IP address is only accessible by software that runs on the instance.  \n  \nVersion 2 of the IMDS adds new protections for the following types of vulnerabilities. These vulnerabilities could be used to try to access the IMDS.  \n  \n* Open website application firewalls\n* Open reverse proxies\n* Server-side request forgery (SSRF) vulnerabilities\n* Open Layer 3 firewalls and network address translation (NAT)\n  \n  \nSecurity Hub recommends that you configure your EC2 instances with IMDSv2.","component":"AwsInstance","image":"","remediation":"To configure EC2 instances with IMDSv2, see [Recommended path to requiring IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-metadata-transition-to-version-2.html#recommended-path-for-requiring-imdsv2) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":149,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"6d03bfdc-0068-5553-a0f8-c4f2d1707634","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":203,"card_id":"None","find_id":"0ac2e1b9-fd2c-5dbb-8336-9852b3dad217","name":"Amazon EC2 launch templates should not assign public IPs to network interfaces","service":"aws","phase":"Recon","description":"This control checks if Amazon EC2 launch templates are configured to assign public IP addresses to network interfaces upon launch. The control fails if an EC2 launch template is configured to assign a public IP address to network interfaces or if there is at least one network interface that has a public IP address.","severity":"High","details":"This control checks if Amazon EC2 launch templates are configured to assign public IP addresses to network interfaces upon launch. The control fails if an EC2 launch template is configured to assign a public IP address to network interfaces or if there is at least one network interface that has a public IP address.  \n  \nA public IP address is one that is reachable from the internet. If you configure your network interfaces with a public IP address, then the resources associated with those network interfaces may be reachable from the internet. EC2 resources shouldn't be publicly accessible because this may permit unintended access to your workloads.","component":"securityhub","image":"","remediation":"To update an EC2 launch template, see [Change the default network interface settings](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html#change-network-interface) in the _Amazon EC2 Auto Scaling User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":194,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"2d475550-9376-5f80-bacf-01f1e562617f","name":"VPC default security groups should not allow inbound or outbound traffic","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.","severity":"High","details":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.  \n  \nThe rules for the [default security group](https://docs.aws.amazon.com/vpc/latest/userguide/default-security-group.html) allow all outbound and inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group. We recommend that you don't use the default security group. Because the default security group cannot be deleted, you should change the default security group rules setting to restrict inbound and outbound traffic. This prevents unintended traffic if the default security group is accidentally configured for resources such as EC2 instances.","component":"AwsSecurityGroup","image":"","remediation":"To remediate this issue, start by creating new least-privilege security groups. For instructions, see [Create a security group](https://docs.aws.amazon.com/vpc/latest/userguide/security-groups.html#creating-security-groups) in the _Amazon VPC User Guide_. Then, assign the new security groups to your EC2 instances. For instructions, see [Change an instance's security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#changing-security-group) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nAfter you assign the new security groups to your resources, remove all inbound and outbound rules from the default security groups. For instructions, see [Delete security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#deleting-security-group-rules) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":184,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b11967a9-8aed-5da2-9a09-d85f61c450a7","name":"Amazon EC2 instances should not have a public IPv4 address","service":"Amazon EC2","phase":"Recon","description":"This control checks whether EC2 instances have a public IP address. The control fails if the publicIp field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.","severity":"High","details":"This control checks whether EC2 instances have a public IP address. The control fails if the `publicIp` field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.   \n  \nA public IPv4 address is an IP address that is reachable from the internet. If you launch your instance with a public IP address, then your EC2 instance is reachable from the internet. A private IPv4 address is an IP address that is not reachable from the internet. You can use private IPv4 addresses for communication between EC2 instances in the same VPC or in your connected private network.  \n  \nIPv6 addresses are globally unique, and therefore are reachable from the internet. However, by default all subnets have the IPv6 addressing attribute set to false. For more information about IPv6, see [IP addressing in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html) in the _Amazon VPC User Guide_.  \n  \nIf you have a legitimate use case to maintain EC2 instances with public IP addresses, then you can suppress the findings from this control. For more information about front-end architecture options, see the [AWS Architecture Blog](https://aws.amazon.com/blogs/architecture/) or the [This Is My Architecture series](https://aws.amazon.com/this-is-my-architecture/?tma.sort-by=item.additionalFields.airDate&tma.sort-order=desc&awsf.category=categories%23mobile).","component":"AwsInstance","image":"","remediation":"Use a non-default VPC so that your instance is not assigned a public IP address by default.  \n  \nWhen you launch an EC2 instance into a default VPC, it is assigned a public IP address. When you launch an EC2 instance into a non-default VPC, the subnet configuration determines whether it receives a public IP address. The subnet has an attribute to determine if new EC2 instances in the subnet receive a public IP address from the public IPv4 address pool.  \n  \nYou cannot manually associate or disassociate an automatically-assigned public IP address from your EC2 instance. To control whether your EC2 instance receives a public IP address, do one of the following:  \n  \n* Modify the public IP addressing attribute of your subnet. For more information, see [Modifying the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip) in the _Amazon VPC User Guide_.\n* Enable or disable the public IP addressing feature during launch. This overrides the subnet's public IP addressing attribute. For more information, see[ Assign a public IPv4 address during instance launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#public-ip-addresses) in the_Amazon EC2 User Guide for Linux Instances_.\n  \n  \nFor more information, see [Public IPv4 addresses and external DNS hostnames](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nIf your EC2 instance is associated with an Elastic IP address, then your EC2 instance is reachable from the internet. You can disassociate an Elastic IP address from an instance or network interface at any time. To disassociate an Elastic IP address, see [Disassociate an Elastic IP address ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#using-instance-addressing-eips-associating-different) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":148,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"6f1dd6f0-176d-568c-8de0-08bb21508eb4","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":150,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"31d328e3-6ab9-5294-9f8d-3703cd408da9","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":152,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"c5cb4c33-21af-51bc-98c0-faae77b2e1f7","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":153,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"2a9ea9ab-564a-5ae7-8877-d88b114b770b","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":154,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d1ee252f-be57-5a55-ad32-edf485dd99db","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":157,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"2f5cb903-b66d-5cf7-a173-9550f1d2e93f","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":158,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"8221f9fd-69fb-56a8-b995-2eb733c22d36","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"High","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":164,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"e4e533b8-4abe-5c88-86a7-4c753ac990a1","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":193,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"f4dc66cf-8f36-58ac-9806-a3d2fcbb17dd","name":"VPC default security groups should not allow inbound or outbound traffic","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.","severity":"High","details":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.  \n  \nThe rules for the [default security group](https://docs.aws.amazon.com/vpc/latest/userguide/default-security-group.html) allow all outbound and inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group. We recommend that you don't use the default security group. Because the default security group cannot be deleted, you should change the default security group rules setting to restrict inbound and outbound traffic. This prevents unintended traffic if the default security group is accidentally configured for resources such as EC2 instances.","component":"AwsSecurityGroup","image":"","remediation":"To remediate this issue, start by creating new least-privilege security groups. For instructions, see [Create a security group](https://docs.aws.amazon.com/vpc/latest/userguide/security-groups.html#creating-security-groups) in the _Amazon VPC User Guide_. Then, assign the new security groups to your EC2 instances. For instructions, see [Change an instance's security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#changing-security-group) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nAfter you assign the new security groups to your resources, remove all inbound and outbound rules from the default security groups. For instructions, see [Delete security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#deleting-security-group-rules) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":162,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"c49c8bda-5508-5d16-8970-e41ce14dbaba","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":207,"card_id":"None","find_id":"68a41c85-80fc-50f1-944e-dc084cbff576","name":"ECS task definitions should have a logging configuration","service":"aws","phase":"Recon","description":"This control checks if the latest active Amazon ECS task definition has a logging configuration specified. The control fails if the task definition doesn't have the logConfiguration property defined or if the value for logDriver is null in at least one container definition.","severity":"High","details":"This control checks if the latest active Amazon ECS task definition has a logging configuration specified. The control fails if the task definition doesn't have the `logConfiguration` property defined or if the value for `logDriver` is null in at least one container definition.  \n  \nLogging helps you maintain the reliability, availability, and performance of Amazon ECS. Collecting data from task definitions provides visibility, which can help you debug processes and find the root cause of errors. If you are using a logging solution that does not have to be defined in the ECS task definition (such as a third party logging solution), you can disable this control after ensuring that your logs are properly captured and delivered.","component":"securityhub","image":"","remediation":"To define a log configuration for your Amazon ECS task definitions, see [Specifying a log configuration in your task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using%5Fawslogs.html#specify-log-config)in the _Amazon Elastic Container Service Developer Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":187,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"991d8668-a5a7-5f8d-ab33-80ac6e9fa14d","name":"EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)","service":"Amazon EC2","phase":"Recon","description":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if HttpTokens is set to required for IMDSv2. The control fails if HttpTokens is set to optional.","severity":"High","details":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if `HttpTokens` is set to required for IMDSv2\\. The control fails if `HttpTokens` is set to `optional`.  \n  \nYou use instance metadata to configure or manage the running instance. The IMDS provides access to temporary, frequently rotated credentials. These credentials remove the need to hard code or distribute sensitive credentials to instances manually or programmatically. The IMDS is attached locally to every EC2 instance. It runs on a special \"link local\" IP address of 169.254.169.254\\. This IP address is only accessible by software that runs on the instance.  \n  \nVersion 2 of the IMDS adds new protections for the following types of vulnerabilities. These vulnerabilities could be used to try to access the IMDS.  \n  \n* Open website application firewalls\n* Open reverse proxies\n* Server-side request forgery (SSRF) vulnerabilities\n* Open Layer 3 firewalls and network address translation (NAT)\n  \n  \nSecurity Hub recommends that you configure your EC2 instances with IMDSv2.","component":"AwsInstance","image":"","remediation":"To configure EC2 instances with IMDSv2, see [Recommended path to requiring IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-metadata-transition-to-version-2.html#recommended-path-for-requiring-imdsv2) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":199,"card_id":"None","find_id":"c487ac1a-3bab-5ee6-aa8b-f8e46cd6eb24","name":"AWS AppSync GraphQL APIs should not be authenticated with API keys","service":"aws","phase":"Recon","description":"This control checks whether your application uses an API key to interact with an AWS AppSync GraphQL API. The control fails if an AWS AppSync GraphQL API is authenticated with an API key.","severity":"High","details":"This control checks whether your application uses an API key to interact with an AWS AppSync GraphQL API. The control fails if an AWS AppSync GraphQL API is authenticated with an API key.  \n  \nAn API key is a hard-coded value in your application that is generated by the AWS AppSync service when you create an unauthenticated GraphQL endpoint. If this API key is compromised, your endpoint is vulnerable to unintended access. Unless you are supporting a publicly accessible application or website, we don't recommend using an API key for authentication.","component":"securityhub","image":"","remediation":"To set an authorization option for your AWS AppSync GraphQL API, see [Authorization and authentication](https://docs.aws.amazon.com/appsync/latest/devguide/security-authz.html) in the _AWS AppSync Developer Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":165,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"0c5c9952-e5a2-50be-bf2b-908a7349efc3","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"High","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":341,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b668911f-c715-5121-a9e5-dff0b51a70c5","name":"Unused Network Access Control Lists should be removed","service":"Amazon EC2","phase":"Recon","description":"This control checks whether there are any unused network access control lists (ACLs).","severity":"Low","details":"This control checks whether there are any unused network access control lists (ACLs).  \n  \nThe control checks the item configuration of the resource `AWS::EC2::NetworkAcl` and determines the relationships of the network ACL.  \n  \nIf the only relationship is the VPC of the network ACL, then the control fails.  \n  \nIf other relationships are listed, then the control passes.","component":"AwsNetworkAcl","image":"","remediation":"For instructions on deleting an unused network ACL, see [Deleting a network ACL](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html#DeleteNetworkACL) in the _Amazon VPC User Guide_. You can't delete the default network ACL or an ACL that is associated with subnets.","type":"aws","enable":false,"keyphrase":[3]},{"id":169,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"b9ff9d1f-514d-54bb-bd78-1fbee571718c","name":"Amazon EC2 instances should not use multiple ENIs","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.","severity":"Low","details":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.  \n  \nMultiple ENIs can cause dual-homed instances, meaning instances that have multiple subnets. This can add network security complexity and introduce unintended network paths and access.","component":"AwsInstance","image":"","remediation":"To detach a network interface from an EC2 instance, see [Detach a network interface from an instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#detach%5Feni) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":185,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8a0ad5c0-5dd9-515f-a4ce-45173273428a","name":"Amazon EC2 instances should not use multiple ENIs","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.","severity":"Low","details":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.  \n  \nMultiple ENIs can cause dual-homed instances, meaning instances that have multiple subnets. This can add network security complexity and introduce unintended network paths and access.","component":"AwsInstance","image":"","remediation":"To detach a network interface from an EC2 instance, see [Detach a network interface from an instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#detach%5Feni) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":188,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"1a6e087a-b478-556d-9296-319da4cd82c3","name":"Unused Network Access Control Lists should be removed","service":"Amazon EC2","phase":"Recon","description":"This control checks whether there are any unused network access control lists (ACLs).","severity":"Low","details":"This control checks whether there are any unused network access control lists (ACLs).  \n  \nThe control checks the item configuration of the resource `AWS::EC2::NetworkAcl` and determines the relationships of the network ACL.  \n  \nIf the only relationship is the VPC of the network ACL, then the control fails.  \n  \nIf other relationships are listed, then the control passes.","component":"AwsNetworkAcl","image":"","remediation":"For instructions on deleting an unused network ACL, see [Deleting a network ACL](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html#DeleteNetworkACL) in the _Amazon VPC User Guide_. You can't delete the default network ACL or an ACL that is associated with subnets.","type":"aws","enable":false,"keyphrase":[3]},{"id":326,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"f5d47d97-94eb-54f4-be52-e65fb90958ff","name":"Attached Amazon EBS volumes should be encrypted at-rest","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.","severity":"Low","details":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.  \n  \nFor an added layer of security of your sensitive data in EBS volumes, you should enable EBS encryption at rest. Amazon EBS encryption offers a straightforward encryption solution for your EBS resources that doesn't require you to build, maintain, and secure your own key management infrastructure. It uses KMS keys when creating encrypted volumes and snapshots.  \n  \nTo learn more about Amazon EBS encryption, see [Amazon EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsVolume","image":"","remediation":"There's no direct way to encrypt an existing unencrypted volume or snapshot. You can only encrypt a new volume or snapshot when you create it.  \n  \nIf you enabled encryption by default, Amazon EBS encrypts the resulting new volume or snapshot using your default key for Amazon EBS encryption. Even if you have not enabled encryption by default, you can enable encryption when you create an individual volume or snapshot. In both cases, you can override the default key for Amazon EBS encryption and choose a symmetric customer managed key.  \n  \nFor more information, see [Creating an Amazon EBS volume](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html) and [Copying an Amazon EBS snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":327,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b11967a9-8aed-5da2-9a09-d85f61c450a7","name":"Amazon EC2 instances should not have a public IPv4 address","service":"Amazon EC2","phase":"Recon","description":"This control checks whether EC2 instances have a public IP address. The control fails if the publicIp field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.","severity":"Low","details":"This control checks whether EC2 instances have a public IP address. The control fails if the `publicIp` field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.   \n  \nA public IPv4 address is an IP address that is reachable from the internet. If you launch your instance with a public IP address, then your EC2 instance is reachable from the internet. A private IPv4 address is an IP address that is not reachable from the internet. You can use private IPv4 addresses for communication between EC2 instances in the same VPC or in your connected private network.  \n  \nIPv6 addresses are globally unique, and therefore are reachable from the internet. However, by default all subnets have the IPv6 addressing attribute set to false. For more information about IPv6, see [IP addressing in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html) in the _Amazon VPC User Guide_.  \n  \nIf you have a legitimate use case to maintain EC2 instances with public IP addresses, then you can suppress the findings from this control. For more information about front-end architecture options, see the [AWS Architecture Blog](https://aws.amazon.com/blogs/architecture/) or the [This Is My Architecture series](https://aws.amazon.com/this-is-my-architecture/?tma.sort-by=item.additionalFields.airDate&tma.sort-order=desc&awsf.category=categories%23mobile).","component":"AwsInstance","image":"","remediation":"Use a non-default VPC so that your instance is not assigned a public IP address by default.  \n  \nWhen you launch an EC2 instance into a default VPC, it is assigned a public IP address. When you launch an EC2 instance into a non-default VPC, the subnet configuration determines whether it receives a public IP address. The subnet has an attribute to determine if new EC2 instances in the subnet receive a public IP address from the public IPv4 address pool.  \n  \nYou cannot manually associate or disassociate an automatically-assigned public IP address from your EC2 instance. To control whether your EC2 instance receives a public IP address, do one of the following:  \n  \n* Modify the public IP addressing attribute of your subnet. For more information, see [Modifying the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip) in the _Amazon VPC User Guide_.\n* Enable or disable the public IP addressing feature during launch. This overrides the subnet's public IP addressing attribute. For more information, see[ Assign a public IPv4 address during instance launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#public-ip-addresses) in the_Amazon EC2 User Guide for Linux Instances_.\n  \n  \nFor more information, see [Public IPv4 addresses and external DNS hostnames](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nIf your EC2 instance is associated with an Elastic IP address, then your EC2 instance is reachable from the internet. You can disassociate an Elastic IP address from an instance or network interface at any time. To disassociate an Elastic IP address, see [Disassociate an Elastic IP address ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#using-instance-addressing-eips-associating-different) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":328,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8a0ad5c0-5dd9-515f-a4ce-45173273428a","name":"Amazon EC2 instances should not use multiple ENIs","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.","severity":"Low","details":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.  \n  \nMultiple ENIs can cause dual-homed instances, meaning instances that have multiple subnets. This can add network security complexity and introduce unintended network paths and access.","component":"AwsInstance","image":"","remediation":"To detach a network interface from an EC2 instance, see [Detach a network interface from an instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#detach%5Feni) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":329,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8fc0fd47-b304-5936-abc7-a81248f9eb80","name":"Attached Amazon EBS volumes should be encrypted at-rest","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.","severity":"Low","details":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.  \n  \nFor an added layer of security of your sensitive data in EBS volumes, you should enable EBS encryption at rest. Amazon EBS encryption offers a straightforward encryption solution for your EBS resources that doesn't require you to build, maintain, and secure your own key management infrastructure. It uses KMS keys when creating encrypted volumes and snapshots.  \n  \nTo learn more about Amazon EBS encryption, see [Amazon EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsVolume","image":"","remediation":"There's no direct way to encrypt an existing unencrypted volume or snapshot. You can only encrypt a new volume or snapshot when you create it.  \n  \nIf you enabled encryption by default, Amazon EBS encrypts the resulting new volume or snapshot using your default key for Amazon EBS encryption. Even if you have not enabled encryption by default, you can enable encryption when you create an individual volume or snapshot. In both cases, you can override the default key for Amazon EBS encryption and choose a symmetric customer managed key.  \n  \nFor more information, see [Creating an Amazon EBS volume](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html) and [Copying an Amazon EBS snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":330,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"991d8668-a5a7-5f8d-ab33-80ac6e9fa14d","name":"EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)","service":"Amazon EC2","phase":"Recon","description":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if HttpTokens is set to required for IMDSv2. The control fails if HttpTokens is set to optional.","severity":"Low","details":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if `HttpTokens` is set to required for IMDSv2\\. The control fails if `HttpTokens` is set to `optional`.  \n  \nYou use instance metadata to configure or manage the running instance. The IMDS provides access to temporary, frequently rotated credentials. These credentials remove the need to hard code or distribute sensitive credentials to instances manually or programmatically. The IMDS is attached locally to every EC2 instance. It runs on a special \"link local\" IP address of 169.254.169.254\\. This IP address is only accessible by software that runs on the instance.  \n  \nVersion 2 of the IMDS adds new protections for the following types of vulnerabilities. These vulnerabilities could be used to try to access the IMDS.  \n  \n* Open website application firewalls\n* Open reverse proxies\n* Server-side request forgery (SSRF) vulnerabilities\n* Open Layer 3 firewalls and network address translation (NAT)\n  \n  \nSecurity Hub recommends that you configure your EC2 instances with IMDSv2.","component":"AwsInstance","image":"","remediation":"To configure EC2 instances with IMDSv2, see [Recommended path to requiring IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-metadata-transition-to-version-2.html#recommended-path-for-requiring-imdsv2) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":331,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"1a6e087a-b478-556d-9296-319da4cd82c3","name":"Unused Network Access Control Lists should be removed","service":"Amazon EC2","phase":"Recon","description":"This control checks whether there are any unused network access control lists (ACLs).","severity":"Low","details":"This control checks whether there are any unused network access control lists (ACLs).  \n  \nThe control checks the item configuration of the resource `AWS::EC2::NetworkAcl` and determines the relationships of the network ACL.  \n  \nIf the only relationship is the VPC of the network ACL, then the control fails.  \n  \nIf other relationships are listed, then the control passes.","component":"AwsNetworkAcl","image":"","remediation":"For instructions on deleting an unused network ACL, see [Deleting a network ACL](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html#DeleteNetworkACL) in the _Amazon VPC User Guide_. You can't delete the default network ACL or an ACL that is associated with subnets.","type":"aws","enable":false,"keyphrase":[3]},{"id":332,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"776c327c-05ab-571e-ab3d-b3b5618ba052","name":"Amazon EC2 instances should be managed by AWS Systems Manager","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.","severity":"Low","details":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.  \n  \nTo help you to maintain security and compliance, Systems Manager scans your stopped and running managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances.  \n  \nTo learn more, see [_AWS Systems Manager User Guide_](https://docs.aws.amazon.com/systems-manager/latest/userguide/what-is-systems-manager.html).","component":"AwsInstance","image":"","remediation":"To manage EC2 instances with Systems Manager, see [Amazon EC2 host management](https://docs.aws.amazon.com/systems-manager/latest/userguide/quick-setup-host-management.html) in the _AWS Systems Manager User Guide_. In the **Configuration options** section, you can keep the default choices or change them as necessary for your preferred configuration.","type":"aws","enable":false,"keyphrase":[3]},{"id":333,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"498db037-7272-5966-ac7b-e0c0a8b19900","name":"Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service","service":"Amazon EC2","phase":"Recon","description":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.","severity":"Low","details":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.   \n  \nThis control evaluates resources in single account. It cannot describe resources that are outside of the account. Because AWS Config and Security Hub do not conduct cross-account checks, you will see `FAILED` findings for VPCs that are shared across accounts. Security Hub recommends that you suppress these `FAILED` findings.  \n  \nTo improve the security posture of your VPC, you can configure Amazon EC2 to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to access Amazon EC2 API operations privately. It restricts all network traffic between your VPC and Amazon EC2 to the Amazon network. Because endpoints are supported within the same Region only, you cannot create an endpoint between a VPC and a service in a different Region. This prevents unintended Amazon EC2 API calls to other Regions.   \n  \nTo learn more about creating VPC endpoints for Amazon EC2, see [Amazon EC2 and interface VPC endpoints ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html)in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsLocalGateway","image":"","remediation":"To create an interface endpoint to Amazon EC2 from the Amazon VPC console, see [Create a VPC endpoint ](https://docs.aws.amazon.com/vpc/latest/privatelink/create-interface-endpoint.html#create-interface-endpoint-aws)in the _AWS PrivateLink Guide_. For **Service name**, choose**com.amazonaws.`region`.ec2**.  \n  \nYou can also create and attach an endpoint policy to your VPC endpoint to control access to the Amazon EC2 API. For instructions on creating a VPC endpoint policy, see[Create an endpoint policy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html#endpoint-policy) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":334,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"fd28c50a-4a8e-526b-a2f4-49e2cfdd7ded","name":"VPC flow logging should be enabled in all VPCs","service":"Amazon EC2","phase":"Recon","description":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to Reject.","severity":"Low","details":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to `Reject`.   \n  \nWith the VPC Flow Logs feature, you can capture information about the IP address traffic going to and from network interfaces in your VPC. After you create a flow log, you can view and retrieve its data in CloudWatch Logs. To reduce cost, you can also send your flow logs to Amazon S3\\.   \n  \nSecurity Hub recommends that you enable flow logging for packet rejects for VPCs. Flow logs provide visibility into network traffic that traverses the VPC and can detect anomalous traffic or provide insight during security workflows.  \n  \nBy default, the record includes values for the different components of the IP address flow, including the source, destination, and protocol. For more information and descriptions of the log fields, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html) in the _Amazon VPC User Guide_.","component":"AwsSubnet","image":"","remediation":"To create a VPC Flow Log, see [Create a Flow Log](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-flow-logs.html#create-flow-log) in the _Amazon VPC User Guide_. After you open the Amazon VPC console, choose **Your VPCs**. For**Filter**, choose **Reject** or**All**.","type":"aws","enable":false,"keyphrase":[3]},{"id":335,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"47fe8bd0-0911-58d0-9303-e005b3ca9aa1","name":"VPC flow logging should be enabled in all VPCs","service":"Amazon EC2","phase":"Recon","description":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to Reject.","severity":"Low","details":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to `Reject`.   \n  \nWith the VPC Flow Logs feature, you can capture information about the IP address traffic going to and from network interfaces in your VPC. After you create a flow log, you can view and retrieve its data in CloudWatch Logs. To reduce cost, you can also send your flow logs to Amazon S3\\.   \n  \nSecurity Hub recommends that you enable flow logging for packet rejects for VPCs. Flow logs provide visibility into network traffic that traverses the VPC and can detect anomalous traffic or provide insight during security workflows.  \n  \nBy default, the record includes values for the different components of the IP address flow, including the source, destination, and protocol. For more information and descriptions of the log fields, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html) in the _Amazon VPC User Guide_.","component":"AwsLocalGateway","image":"","remediation":"To create a VPC Flow Log, see [Create a Flow Log](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-flow-logs.html#create-flow-log) in the _Amazon VPC User Guide_. After you open the Amazon VPC console, choose **Your VPCs**. For**Filter**, choose **Reject** or**All**.","type":"aws","enable":false,"keyphrase":[3]},{"id":336,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"f4dc66cf-8f36-58ac-9806-a3d2fcbb17dd","name":"VPC default security groups should not allow inbound or outbound traffic","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.","severity":"Low","details":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.  \n  \nThe rules for the [default security group](https://docs.aws.amazon.com/vpc/latest/userguide/default-security-group.html) allow all outbound and inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group. We recommend that you don't use the default security group. Because the default security group cannot be deleted, you should change the default security group rules setting to restrict inbound and outbound traffic. This prevents unintended traffic if the default security group is accidentally configured for resources such as EC2 instances.","component":"AwsSecurityGroup","image":"","remediation":"To remediate this issue, start by creating new least-privilege security groups. For instructions, see [Create a security group](https://docs.aws.amazon.com/vpc/latest/userguide/security-groups.html#creating-security-groups) in the _Amazon VPC User Guide_. Then, assign the new security groups to your EC2 instances. For instructions, see [Change an instance's security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#changing-security-group) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nAfter you assign the new security groups to your resources, remove all inbound and outbound rules from the default security groups. For instructions, see [Delete security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#deleting-security-group-rules) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":337,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"2d475550-9376-5f80-bacf-01f1e562617f","name":"VPC default security groups should not allow inbound or outbound traffic","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.","severity":"Low","details":"This control checks whether the default security group of a VPC allows inbound or outbound traffic. The control fails if the security group allows inbound or outbound traffic.  \n  \nThe rules for the [default security group](https://docs.aws.amazon.com/vpc/latest/userguide/default-security-group.html) allow all outbound and inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group. We recommend that you don't use the default security group. Because the default security group cannot be deleted, you should change the default security group rules setting to restrict inbound and outbound traffic. This prevents unintended traffic if the default security group is accidentally configured for resources such as EC2 instances.","component":"AwsSecurityGroup","image":"","remediation":"To remediate this issue, start by creating new least-privilege security groups. For instructions, see [Create a security group](https://docs.aws.amazon.com/vpc/latest/userguide/security-groups.html#creating-security-groups) in the _Amazon VPC User Guide_. Then, assign the new security groups to your EC2 instances. For instructions, see [Change an instance's security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#changing-security-group) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nAfter you assign the new security groups to your resources, remove all inbound and outbound rules from the default security groups. For instructions, see [Delete security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#deleting-security-group-rules) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":338,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"6940a09c-dfd7-5bef-9f6d-67333680f1b3","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":339,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"df1b265d-97be-5720-89d7-6dd8ee3ec621","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":340,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"d7ba5452-57b5-5876-9c1e-826ce1bf243b","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Low","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":271,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"1b3309bf-d108-52c3-98be-9117d65f19b3","name":"Root User MFA Enable","service":"AWS Security Hub","phase":"r","description":"MFA should be enabled for the root user\r\n\r\nThe root user has complete access to all the services and resources in an AWS account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to the AWS Management Console, they're prompted for their user name and password and for an authentication code from their AWS MFA device.","severity":"Low","details":"The root user has complete access to all the services and resources in an AWS account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to the AWS Management Console, they're prompted for their user name and password and for an authentication code from their AWS MFA device.  \r\n  \r\nWhen you use virtual MFA for the root user, CIS recommends that the device used is _not_ a personal device. Instead, use a dedicated mobile device (tablet or phone) that you manage to keep charged and secured independent of any individual personal devices. This lessens the risks of losing access to the MFA due to device loss, device trade-in, or if the individual owning the device is no longer employed at the company.","component":"AWS Security Hub","image":"-","remediation":"To enable MFA for the root user, see [Activate MFA on the AWS account root user](https://docs.aws.amazon.com/accounts/latest/reference/root-user-mfa.html) in the _AWS Account Management Reference Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":270,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"26fd1327-f16c-591f-a9a3-e8459d085e7f","name":"Hardware MFA for Root User","service":"AWS Security Hub","phase":"r","description":"Hardware MFA should be enabled for the root user\r\n\r\nThis control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.","severity":"Low","details":"This control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.  \r\n  \r\nVirtual MFA might not provide the same level of security as hardware MFA devices. We recommend that you use only a virtual MFA device while you wait for hardware purchase approval or for your hardware to arrive. To learn more, see[ Enabling a virtual multi-factor authentication (MFA) device (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fvirtual.html) in the _IAM User Guide_.  \r\n  \r\nBoth time-based one-time password (TOTP) and Universal 2nd Factor (U2F) tokens are viable as hardware MFA options.","component":"AWS Security Hub","image":"-","remediation":"To add a hardware MFA device for the root user, see [Enable a hardware MFA device for the AWS account root user (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fphysical.html#enable-hw-mfa-for-root) in the _IAM User Guide_.  \r\n  \r\nWe are offering a free MFA security key to eligible customers. [See if you qualify, and order your free key](https://console.aws.amazon.com/securityhub/home/?region=us-east-1#/free-mfa-security-key/).","type":"aws","enable":false,"keyphrase":[3]},{"id":260,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"ece743ce-3e07-54cb-9c75-8261e1623f02","name":"Hardware MFA for Root User","service":"AWS Security Hub","phase":"r","description":"Hardware MFA should be enabled for the root user\r\n\r\nThis control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.","severity":"Low","details":"This control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials. The control fails if MFA isn't enabled or if any virtual MFA devices are permitted for signing in with root user credentials.  \r\n  \r\nVirtual MFA might not provide the same level of security as hardware MFA devices. We recommend that you use only a virtual MFA device while you wait for hardware purchase approval or for your hardware to arrive. To learn more, see[ Enabling a virtual multi-factor authentication (MFA) device (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fvirtual.html) in the _IAM User Guide_.  \r\n  \r\nBoth time-based one-time password (TOTP) and Universal 2nd Factor (U2F) tokens are viable as hardware MFA options.","component":"AWS Security Hub","image":"-","remediation":"To add a hardware MFA device for the root user, see [Enable a hardware MFA device for the AWS account root user (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fmfa%5Fenable%5Fphysical.html#enable-hw-mfa-for-root) in the _IAM User Guide_.  \r\n  \r\nWe are offering a free MFA security key to eligible customers. [See if you qualify, and order your free key](https://console.aws.amazon.com/securityhub/home/?region=us-east-1#/free-mfa-security-key/).","type":"aws","enable":false,"keyphrase":[3]},{"id":240,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"0447fd8a-8452-5932-a85a-58d758205a26","name":"Redshift Lacking Backup","service":"AWS Security Hub","phase":"r","description":"Amazon Redshift clusters should have automatic snapshots enabled\r\n\r\nThis control checks whether an Amazon Redshift cluster has automated snapshots enabled, and a retention period greater than or equal to the specified time frame. The control fails if automated snapshots aren't enabled for the cluster, or if the retention period is less than the specified time frame. Unless you provide a custom parameter value for the snapshot retention period, Security Hub uses a default value of 7 days.","severity":"Low","details":"This control checks whether an Amazon Redshift cluster has automated snapshots enabled, and a retention period greater than or equal to the specified time frame. The control fails if automated snapshots aren't enabled for the cluster, or if the retention period is less than the specified time frame. Unless you provide a custom parameter value for the snapshot retention period, Security Hub uses a default value of 7 days.  \r\n  \r\nBackups help you to recover more quickly from a security incident. They strengthen the resilience of your systems. Amazon Redshift takes periodic snapshots by default. This control checks whether automatic snapshots are enabled and retained for at least seven days. For more details on Amazon Redshift automated snapshots, see [Automated snapshots](https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html#about-automated-snapshots) in the _Amazon Redshift Management Guide_.","component":"AWS Security Hub","image":"-","remediation":"To update the snapshot retention period for an Amazon Redshift cluster, see [Modifying a cluster](https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-console.html#modify-cluster) in the _Amazon Redshift Management Guide_. For **Backup**, set **Snapshot retention** to a value of 7 or greater.","type":"aws","enable":false,"keyphrase":[3]},{"id":292,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"77df1996-37ca-5a12-b4d9-0205bc75b269","name":"Lambda Public Access","service":"AWS Lambda","phase":"r","description":"Lambda function policies should prohibit public access\r\n\r\nThis control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.","severity":"Low","details":"This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as `AWS:SourceAccount`. We recommend using other S3 conditions along with `AWS:SourceAccount` in your bucket policy for more refined access.  \r\n  \r\nThe Lambda function should not be publicly accessible, as this may allow unintended access to your function code.","component":"AwsFunction","image":"-","remediation":"To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the`AWS:SourceAccount` condition. You can only update the resource-based policy from the Lambda API or AWS CLI.  \r\n  \r\nTo start, [ review the resource-based policy](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html) on the Lambda console. Identify the policy statement that has`Principal` field values that make the policy public, such as `\"*\"` or `{ \"AWS\": \"*\" }`.  \r\n  \r\nYou cannot edit the policy from the console. To remove permissions from the function, run the [remove-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html) command from the AWS CLI.  \r\n  \r\n`` $ aws lambda remove-permission --function-name `<function-name>` --statement-id `<statement-id>` ``  \r\n  \r\nReplace `` `<function-name>` `` with the name of the Lambda function, and `` `<statement-id>` `` with the statement ID (`Sid`) of the statement that you want to remove.","type":"aws","enable":false,"keyphrase":[3]},{"id":290,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"9b33f514-2620-5e2a-8e99-b0842e441601","name":"Lambda Public Access","service":"AWS Lambda","phase":"r","description":"Lambda function policies should prohibit public access\r\n\r\nThis control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.","severity":"Low","details":"This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as `AWS:SourceAccount`. We recommend using other S3 conditions along with `AWS:SourceAccount` in your bucket policy for more refined access.  \r\n  \r\nThe Lambda function should not be publicly accessible, as this may allow unintended access to your function code.","component":"AwsFunction","image":"-","remediation":"To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the`AWS:SourceAccount` condition. You can only update the resource-based policy from the Lambda API or AWS CLI.  \r\n  \r\nTo start, [ review the resource-based policy](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html) on the Lambda console. Identify the policy statement that has`Principal` field values that make the policy public, such as `\"*\"` or `{ \"AWS\": \"*\" }`.  \r\n  \r\nYou cannot edit the policy from the console. To remove permissions from the function, run the [remove-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html) command from the AWS CLI.  \r\n  \r\n`` $ aws lambda remove-permission --function-name `<function-name>` --statement-id `<statement-id>` ``  \r\n  \r\nReplace `` `<function-name>` `` with the name of the Lambda function, and `` `<statement-id>` `` with the statement ID (`Sid`) of the statement that you want to remove.","type":"aws","enable":false,"keyphrase":[3]},{"id":293,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"b574f7e9-ea00-5c8a-aad4-3a994c32e6d9","name":"Lambda Unsupported Runtime","service":"AWS Lambda","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Low","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":288,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"4020be58-a075-5771-a48c-a6c9efc2e448","name":"Lambda Unsupported Runtime","service":"AWS Lambda","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Low","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":276,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"053a67ff-4c56-5f1d-801f-e99e4e0a2f71","name":"Lambda Unsupported Runtime","service":"AWS Security Hub","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Low","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":310,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"2767ce18-2d89-523b-9ba5-a51a2a509a92","name":"Security group has Risky Port Access","service":"Amazon EC2","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":300,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"373af70d-2596-57aa-b847-64e4c1196348","name":"Security group has Risky Port Access","service":"Amazon EC2","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":281,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"dcea8b02-78dd-5de7-95f1-628f7bea2b84","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":266,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"373af70d-2596-57aa-b847-64e4c1196348","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":257,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d26092ee-1a92-5d51-9350-29a4dddf14ff","name":"EBS Snapshot Public Restore","service":"AWS Security Hub","phase":"r","description":"This control checks whether Amazon Elastic Block Store snapshots are not public. The control fails if Amazon EBS snapshots are restorable by anyone.","severity":"Low","details":"This control checks whether Amazon Elastic Block Store snapshots are not public. The control fails if Amazon EBS snapshots are restorable by anyone.  \r\n  \r\nEBS snapshots are used to back up the data on your EBS volumes to Amazon S3 at a specific point in time. You can use the snapshots to restore previous states of EBS volumes. It is rarely acceptable to share a snapshot with the public. Typically the decision to share a snapshot publicly was made in error or without a complete understanding of the implications. This check helps ensure that all such sharing was fully planned and intentional.  \r\n  \r\nTo make a public EBS snapshot private, see [Share a snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html#share-unencrypted-snapshot) in the _Amazon EC2 User Guide for Linux Instances_. For **Actions, Modify permissions**, choose **Private**.","component":"AWS Security Hub","image":"-","remediation":"This control checks whether Amazon Elastic Block Store snapshots are not public. The control fails if Amazon EBS snapshots are restorable by anyone.  \r\n  \r\nEBS snapshots are used to back up the data on your EBS volumes to Amazon S3 at a specific point in time. You can use the snapshots to restore previous states of EBS volumes. It is rarely acceptable to share a snapshot with the public. Typically the decision to share a snapshot publicly was made in error or without a complete understanding of the implications. This check helps ensure that all such sharing was fully planned and intentional.  \r\n  \r\nTo make a public EBS snapshot private, see [Share a snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html#share-unencrypted-snapshot) in the _Amazon EC2 User Guide for Linux Instances_. For **Actions, Modify permissions**, choose **Private**.","type":"aws","enable":false,"keyphrase":[3]},{"id":198,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b668911f-c715-5121-a9e5-dff0b51a70c5","name":"Unused Network Access Control Lists should be removed","service":"Amazon EC2","phase":"Recon","description":"This control checks whether there are any unused network access control lists (ACLs).","severity":"Low","details":"This control checks whether there are any unused network access control lists (ACLs).  \n  \nThe control checks the item configuration of the resource `AWS::EC2::NetworkAcl` and determines the relationships of the network ACL.  \n  \nIf the only relationship is the VPC of the network ACL, then the control fails.  \n  \nIf other relationships are listed, then the control passes.","component":"AwsNetworkAcl","image":"","remediation":"For instructions on deleting an unused network ACL, see [Deleting a network ACL](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html#DeleteNetworkACL) in the _Amazon VPC User Guide_. You can't delete the default network ACL or an ACL that is associated with subnets.","type":"aws","enable":false,"keyphrase":[3]},{"id":217,"card_id":"None","find_id":"4fd59d92-0791-5c68-a09e-5b12c4563c58","name":"IAM customer managed policies that you create should not allow wildcard actions for services","service":"aws","phase":"r","description":"This control checks whether the IAM identity-based policies that you create have Allow statements that use the * wildcard to grant permissions for all actions on any service. The control fails if any policy statement includes \"Effect\": \"Allow\" with \"Action\": \"Service:*\".","severity":"Low","details":"This control checks whether the IAM identity-based policies that you create have Allow statements that use the \\* wildcard to grant permissions for all actions on any service. The control fails if any policy statement includes `\"Effect\": \"Allow\"` with `\"Action\": \"Service:*\"`.   \r\n  \r\nFor example, the following statement in a policy results in a failed finding.  \r\n  \r\n`\"Statement\": [ { \"Sid\": \"EC2-Wildcard\", \"Effect\": \"Allow\", \"Action\": \"ec2:*\", \"Resource\": \"*\" }`  \r\n  \r\nThe control also fails if you use `\"Effect\": \"Allow\"` with `` \"NotAction\": \"`service`:*\" ``. In that case, the `NotAction` element provides access to all of the actions in an AWS service, except for the actions specified in `NotAction`.  \r\n  \r\nThis control only applies to customer managed IAM policies. It does not apply to IAM policies that are managed by AWS.  \r\n  \r\nWhen you assign permissions to AWS services, it is important to scope the allowed IAM actions in your IAM policies. You should restrict IAM actions to only those actions that are needed. This helps you to provision least privilege permissions. Overly permissive policies might lead to privilege escalation if the policies are attached to an IAM principal that might not require the permission.  \r\n  \r\nIn some cases, you might want to allow IAM actions that have a similar prefix, such as `DescribeFlowLogs` and `DescribeAvailabilityZones`. In these authorized cases, you can add a suffixed wildcard to the common prefix. For example, `ec2:Describe*`.  \r\n  \r\nThis control passes if you use a prefixed IAM action with a suffixed wildcard. For example, the following statement in a policy results in a passed finding.  \r\n  \r\n`\"Statement\": [ { \"Sid\": \"EC2-Wildcard\", \"Effect\": \"Allow\", \"Action\": \"ec2:Describe*\", \"Resource\": \"*\" }`  \r\n  \r\nWhen you group related IAM actions in this way, you can also avoid exceeding the IAM policy size limits.  \r\n  \r\n###### Note\r\n\r\nAWS Config should be enabled in all Regions in which you use Security Hub. However, global resource recording can be enabled in a single Region. If you only record global resources in a single Region, then you can disable this control in all Regions except the Region where you record global resources.","component":"securityhub","image":"-","remediation":"To remediate this issue, update your IAM policies so that they do not allow full \"\\*\" administrative privileges. For details about how to edit an IAM policy, see [Editing IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access%5Fpolicies%5Fmanage-edit.html) in the _IAM User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":252,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"321916f1-7810-5f71-b2b9-00f84c669c0c","name":"SSM documents should not be public","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether AWS Systems Manager documents that are owned by the account are public. This control fails if SSM documents with the owner Self are public.","severity":"Low","details":"This control checks whether AWS Systems Manager documents that are owned by the account are public. This control fails if SSM documents with the owner `Self` are public.  \n  \nSSM documents that are public might allow unintended access to your documents. A public SSM document can expose valuable information about your account, resources, and internal processes.  \n  \nUnless your use case requires public sharing, we recommend that you block public sharing setting for Systems Manager documents that are owned by `Self`.","component":"AWS Security Hub","image":"","remediation":"To block public sharing for SSM documents, see [Block public sharing for SSM documents](https://docs.aws.amazon.com/systems-manager/latest/userguide/documents-ssm-sharing.html#block-public-access) in the _AWS Systems Manager User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":238,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"cd148500-666d-5ba8-b3dc-8e40d22296b4","name":"Ensure IAM password policy requires at least one symbol","service":"AWS Security Hub","phase":"Recon","description":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets.","severity":"Low","details":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets.  \n  \nCIS recommends that the password policy require at least one symbol. Setting a password complexity policy increases account resiliency against brute force login attempts.","component":"AWS Security Hub","image":"","remediation":"To change your password policy, see [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fpasswords%5Faccount-policy.html) in the _IAM User Guide_. For **Password strength**, select **Require at least one nonalphanumeric character**.","type":"aws","enable":false,"keyphrase":[3]},{"id":239,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"af59db09-6abd-5687-9744-a63d207a6ef6","name":"Auto Scaling groups should use multiple instance types in multiple Availability Zones","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 Auto Scaling group uses multiple instance types. The control fails if the Auto Scaling group has only one instance type defined.","severity":"Low","details":"This control checks whether an Amazon EC2 Auto Scaling group uses multiple instance types. The control fails if the Auto Scaling group has only one instance type defined.  \n  \nYou can enhance availability by deploying your application across multiple instance types running in multiple Availability Zones. Security Hub recommends using multiple instance types so that the Auto Scaling group can launch another instance type if there is insufficient instance capacity in your chosen Availability Zones.","component":"AWS Security Hub","image":"","remediation":"To create an Auto Scaling group with multiple instance types, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the _Amazon EC2 Auto Scaling User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":241,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"5c6261a7-6e2b-5c55-9a6c-09256589b62a","name":"Ensure IAM password policy requires at least one uppercase letter","service":"AWS Security Hub","phase":"Recon","description":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets.","severity":"Low","details":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets.  \n  \nCIS recommends that the password policy require at least one uppercase letter. Setting a password complexity policy increases account resiliency against brute force login attempts.","component":"AWS Security Hub","image":"","remediation":"To change your password policy, see [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fpasswords%5Faccount-policy.html) in the _IAM User Guide_. For **Password strength**, select **Require at least one uppercase letter from the Latin alphabet (A–Z)**.","type":"aws","enable":false,"keyphrase":[3]},{"id":253,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"ac58eeda-4975-55cc-8ea7-f4e81e1fcd9e","name":"The default stateless action for Network Firewall policies should be drop or forward for full packets","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether the default stateless action for full packets for a Network Firewall policy is drop or forward. The control passes if Drop or Forward is selected, and fails if Pass is selected.","severity":"Low","details":"This control checks whether the default stateless action for full packets for a Network Firewall policy is drop or forward. The control passes if `Drop` or `Forward` is selected, and fails if `Pass` is selected.  \n  \nA firewall policy defines how your firewall monitors and handles traffic in Amazon VPC. You configure stateless and stateful rule groups to filter packets and traffic flows. Defaulting to `Pass` can allow unintended traffic.","component":"AWS Security Hub","image":"","remediation":"To change your firewall policy, see [Updating a firewall policy](https://docs.aws.amazon.com/network-firewall/latest/developerguide/firewall-policy-updating.html) in the _AWS Network Firewall Developer Guide_. For **Stateless default actions**, choose **Edit**. Then, choose **Drop** or **Forward to stateful rule groups**as the **Action**.","type":"aws","enable":false,"keyphrase":[3]},{"id":242,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d406a226-8e49-515e-ac9a-614201463bcc","name":"Aurora MySQL DB clusters should publish audit logs to CloudWatch Logs","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon Aurora MySQL DB cluster is configured to publish audit logs to Amazon CloudWatch Logs. The control fails if the cluster isn't configured to publish audit logs to CloudWatch Logs.","severity":"Low","details":"This control checks whether an Amazon Aurora MySQL DB cluster is configured to publish audit logs to Amazon CloudWatch Logs. The control fails if the cluster isn't configured to publish audit logs to CloudWatch Logs.  \n  \nAudit logs capture a record of database activity, including login attempts, data modifications, schema changes, and other events that can be audited for security and compliance purposes. When you configure an Aurora MySQL DB cluster to publish audit logs to a log group in Amazon CloudWatch Logs, you can perform real-time analysis of the log data. CloudWatch Logs retains logs in highly durable storage. You can also create alarms and view metrics in CloudWatch.  \n  \n###### Note\n\nAn alternative way to publish audit logs to CloudWatch Logs is by enabling advanced auditing and setting the cluster-level DB parameter `server_audit_logs_upload` to `1`. The default for the `server_audit_logs_upload parameter` is `0`. However, we recommend you use the following remediation instructions instead to pass this control.","component":"AWS Security Hub","image":"","remediation":"To publish Aurora MySQL DB cluster audit logs to CloudWatch Logs, see [Publishing Amazon Aurora MySQL logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.CloudWatch.html) in the_Amazon Aurora User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":243,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"85aeff44-1cd0-598f-9312-6bc4872cc216","name":"Application Load Balancer deletion protection should be enabled","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Application Load Balancer has deletion protection enabled. The control fails if deletion protection is not configured.","severity":"Low","details":"This control checks whether an Application Load Balancer has deletion protection enabled. The control fails if deletion protection is not configured.  \n  \nEnable deletion protection to protect your Application Load Balancer from deletion.","component":"AWS Security Hub","image":"","remediation":"To prevent your load balancer from being deleted accidentally, you can enable deletion protection. By default, deletion protection is disabled for your load balancer.  \n  \nIf you enable deletion protection for your load balancer, you must disable delete protection before you can delete the load balancer.  \n  \nTo enable deletion protection, see [Deletion protection](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#deletion-protection) in the _User Guide for Application Load Balancers_.","type":"aws","enable":false,"keyphrase":[3]},{"id":244,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"58ab924b-b4d0-58de-828a-439a86af1b32","name":"EC2 Client VPN endpoints should have client connection logging enabled","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an AWS Client VPN endpoint has client connection logging enabled. The control fails if the endpoint doesn't have client connection logging enabled.","severity":"Low","details":"This control checks whether an AWS Client VPN endpoint has client connection logging enabled. The control fails if the endpoint doesn't have client connection logging enabled.  \n  \nClient VPN endpoints allow remote clients to securely connect to resources in a Virtual Private Cloud (VPC) in AWS. Connection logs allow you to track user activity on the VPN endpoint and provides visibility. When you enable connection logging, you can specify the name of a log stream in the log group. If you don't specify a log stream, the Client VPN service creates one for you.","component":"AWS Security Hub","image":"","remediation":"To enable connection logging, see [Enable connection logging for an existing Client VPN endpoint](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-with-connection-logs.html#create-connection-log-existing) in the _AWS Client VPN Administrator Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":245,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"5d9b798f-6c8d-5a39-9972-4caf5537fcf0","name":"Classic Load Balancer listeners should be configured with HTTPS or TLS termination","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether your Classic Load Balancer listeners are configured with HTTPS or TLS protocol for front-end (client to load balancer) connections. The control is applicable if a Classic Load Balancer has listeners. If your Classic Load Balancer does not have a listener configured, then the control does not report any findings.","severity":"Low","details":"This control checks whether your Classic Load Balancer listeners are configured with HTTPS or TLS protocol for front-end (client to load balancer) connections. The control is applicable if a Classic Load Balancer has listeners. If your Classic Load Balancer does not have a listener configured, then the control does not report any findings.  \n  \nThe control passes if the Classic Load Balancer listeners are configured with TLS or HTTPS for front-end connections.  \n  \nThe control fails if the listener is not configured with TLS or HTTPS for front-end connections.  \n  \nBefore you start to use a load balancer, you must add one or more listeners. A listener is a process that uses the configured protocol and port to check for connection requests. Listeners can support both HTTP and HTTPS/TLS protocols. You should always use an HTTPS or TLS listener, so that the load balancer does the work of encryption and decryption in transit.","component":"AWS Security Hub","image":"","remediation":"To remediate this issue, update your listeners to use the TLS or HTTPS protocol.  \n  \n###### To change all noncompliant listeners to TLS/HTTPS listeners\n\n1. Open the Amazon EC2 console at<https://console.aws.amazon.com/ec2/>.\n2. In the navigation pane, under **Load Balancing**, choose **Load Balancers**.\n3. Select your Classic Load Balancer.\n4. On the **Listeners** tab, choose**Edit**.\n5. For all listeners where **Load Balancer Protocol** is not set to HTTPS or SSL, change the setting to HTTPS or SSL.\n6. For all modified listeners, on the **Certificates** tab, choose**Change default**.\n7. For **ACM and IAM certificates**, select a certificate.\n8. Choose **Save as default**.\n9. After you update all of the listeners, choose **Save**.","type":"aws","enable":false,"keyphrase":[3]},{"id":246,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"3cafd328-f6f9-5528-ac18-1c1433479755","name":"Redshift clusters should not use the default database name","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon Redshift cluster has changed the database name from its default value. The control will fail if the database name for a Redshift cluster is set to dev.","severity":"Low","details":"This control checks whether an Amazon Redshift cluster has changed the database name from its default value. The control will fail if the database name for a Redshift cluster is set to `dev`.  \n  \nWhen creating a Redshift cluster, you should change the default database name to a unique value. Default names are public knowledge and should be changed upon configuration. As an example, a well-known name could lead to inadvertent access if it was used in IAM policy conditions.","component":"AWS Security Hub","image":"","remediation":"You can't change the database name for your Amazon Redshift cluster after it is created. For instructions on creating a new cluster, see [Getting started with Amazon Redshift](https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html) in the   _Amazon Redshift Getting Started Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":248,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"c0422037-47e7-5d0f-b442-ede35d3ba170","name":"Neptune DB clusters should have automated backups enabled","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether a Neptune DB cluster has automated backups enabled, and a backup retention period greater than or equal to the specified time frame. The control fails if backups aren't enabled for the Neptune DB cluster, or if the retention period is less than the specified time frame. Unless you provide a custom parameter value for the backup retention period, Security Hub uses a default value of 7 days.","severity":"Low","details":"This control checks whether a Neptune DB cluster has automated backups enabled, and a backup retention period greater than or equal to the specified time frame. The control fails if backups aren't enabled for the Neptune DB cluster, or if the retention period is less than the specified time frame. Unless you provide a custom parameter value for the backup retention period, Security Hub uses a default value of 7 days.  \n  \nBackups help you recover more quickly from a security incident and strengthen the resilience of your systems. By automating backups for your Neptune DB clusters, you'll be able to restore your systems to a point in time and minimize downtime and data loss.","component":"AWS Security Hub","image":"","remediation":"To enable automated backups and set a backup retention period for your Neptune DB clusters, see [ Enabling automated backups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER%5FWorkingWithAutomatedBackups.html#USER%5FWorkingWithAutomatedBackups.Enabling) in the_Amazon RDS User Guide_. For **Backup retention period**, choose a value greater than or equal to 7.","type":"aws","enable":false,"keyphrase":[3]},{"id":249,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"62c48e21-0351-5619-aab2-78d38c40bb17","name":"Network ACLs should not allow ingress from 00.0.0/0 to port 22 or port 3389","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether a network access control list (NACL) allows unrestricted access to the default TCP ports for SSH/RDP ingress traffic. The rule fails if a NACL inbound entry allows a source CIDR block of '0.0.0.0/0' or '::/0' for TCP ports 22 or 3389.","severity":"Low","details":"This control checks whether a network access control list (NACL) allows unrestricted access to the default TCP ports for SSH/RDP ingress traffic. The rule fails if a NACL inbound entry allows a source CIDR block of '0.0.0.0/0' or '::/0' for TCP ports 22 or 3389.  \n  \nAccess to remote server administration ports, such as port 22 (SSH) and port 3389 (RDP), should not be publicly accessible, as this may allow unintended access to resources within your VPC.","component":"AWS Security Hub","image":"","remediation":"For more information about NACLs, see [Network ACLs](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html) in the VPC User Guide.","type":"aws","enable":false,"keyphrase":[3]},{"id":250,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"885ab0ff-adca-5e98-a3ec-b215d68924b5","name":"Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.","severity":"Low","details":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.   \n  \nThis control evaluates resources in single account. It cannot describe resources that are outside of the account. Because AWS Config and Security Hub do not conduct cross-account checks, you will see `FAILED` findings for VPCs that are shared across accounts. Security Hub recommends that you suppress these `FAILED` findings.  \n  \nTo improve the security posture of your VPC, you can configure Amazon EC2 to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to access Amazon EC2 API operations privately. It restricts all network traffic between your VPC and Amazon EC2 to the Amazon network. Because endpoints are supported within the same Region only, you cannot create an endpoint between a VPC and a service in a different Region. This prevents unintended Amazon EC2 API calls to other Regions.   \n  \nTo learn more about creating VPC endpoints for Amazon EC2, see [Amazon EC2 and interface VPC endpoints ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html)in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsSubnet","image":"","remediation":"To create an interface endpoint to Amazon EC2 from the Amazon VPC console, see [Create a VPC endpoint ](https://docs.aws.amazon.com/vpc/latest/privatelink/create-interface-endpoint.html#create-interface-endpoint-aws)in the _AWS PrivateLink Guide_. For **Service name**, choose**com.amazonaws.`region`.ec2**.  \n  \nYou can also create and attach an endpoint policy to your VPC endpoint to control access to the Amazon EC2 API. For instructions on creating a VPC endpoint policy, see[Create an endpoint policy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html#endpoint-policy) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":251,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"c487ac1a-3bab-5ee6-aa8b-f8e46cd6eb24","name":"AWS AppSync GraphQL APIs should not be authenticated with API keys","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether your application uses an API key to interact with an AWS AppSync GraphQL API. The control fails if an AWS AppSync GraphQL API is authenticated with an API key.","severity":"Low","details":"This control checks whether your application uses an API key to interact with an AWS AppSync GraphQL API. The control fails if an AWS AppSync GraphQL API is authenticated with an API key.  \n  \nAn API key is a hard-coded value in your application that is generated by the AWS AppSync service when you create an unauthenticated GraphQL endpoint. If this API key is compromised, your endpoint is vulnerable to unintended access. Unless you are supporting a publicly accessible application or website, we don't recommend using an API key for authentication.","component":"AWS Security Hub","image":"","remediation":"To set an authorization option for your AWS AppSync GraphQL API, see [Authorization and authentication](https://docs.aws.amazon.com/appsync/latest/devguide/security-authz.html) in the _AWS AppSync Developer Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":254,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"0ac2e1b9-fd2c-5dbb-8336-9852b3dad217","name":"Amazon EC2 launch templates should not assign public IPs to network interfaces","service":"AWS Security Hub","phase":"Recon","description":"This control checks if Amazon EC2 launch templates are configured to assign public IP addresses to network interfaces upon launch. The control fails if an EC2 launch template is configured to assign a public IP address to network interfaces or if there is at least one network interface that has a public IP address.","severity":"Low","details":"This control checks if Amazon EC2 launch templates are configured to assign public IP addresses to network interfaces upon launch. The control fails if an EC2 launch template is configured to assign a public IP address to network interfaces or if there is at least one network interface that has a public IP address.  \n  \nA public IP address is one that is reachable from the internet. If you configure your network interfaces with a public IP address, then the resources associated with those network interfaces may be reachable from the internet. EC2 resources shouldn't be publicly accessible because this may permit unintended access to your workloads.","component":"AWS Security Hub","image":"","remediation":"To update an EC2 launch template, see [Change the default network interface settings](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html#change-network-interface) in the _Amazon EC2 Auto Scaling User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":255,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"4167f04c-0ac1-542f-8ee0-43935f311c2c","name":"Ensure IAM password policy requires at least one lowercase letter","service":"AWS Security Hub","phase":"Recon","description":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets. CIS recommends that the password policy require at least one lowercase letter. Setting a password complexity policy increases account resiliency against brute force login attempts.","severity":"Low","details":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets. CIS recommends that the password policy require at least one lowercase letter. Setting a password complexity policy increases account resiliency against brute force login attempts.","component":"AWS Security Hub","image":"","remediation":"To change your password policy, see [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fpasswords%5Faccount-policy.html) in the _IAM User Guide_. For **Password strength**, select **Require at least one lowercase letter from the Latin alphabet (A–Z)**.","type":"aws","enable":false,"keyphrase":[3]},{"id":256,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"7400bb8c-70c8-5f6e-a062-24d3d24c1dbc","name":"Kinesis streams should be encrypted at rest","service":"AWS Security Hub","phase":"Recon","description":"This control checks if Kinesis Data Streams are encrypted at rest with server-side encryption. This control fails if a Kinesis stream is not encrypted at rest with server-side encryption.","severity":"Low","details":"This control checks if Kinesis Data Streams are encrypted at rest with server-side encryption. This control fails if a Kinesis stream is not encrypted at rest with server-side encryption.  \n  \nServer-side encryption is a feature in Amazon Kinesis Data Streams that automatically encrypts data before it's at rest by using an AWS KMS key. Data is encrypted before it's written to the Kinesis stream storage layer, and decrypted after it's retrieved from storage. As a result, your data is encrypted at rest within the Amazon Kinesis Data Streams service.","component":"AWS Security Hub","image":"","remediation":"For information about enabling server-side encryption for Kinesis streams, see [How do I get started with server-side encryption?](https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html) in the _Amazon Kinesis Developer Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":258,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"68a41c85-80fc-50f1-944e-dc084cbff576","name":"ECS task definitions should have a logging configuration","service":"AWS Security Hub","phase":"Recon","description":"This control checks if the latest active Amazon ECS task definition has a logging configuration specified. The control fails if the task definition doesn't have the logConfiguration property defined or if the value for logDriver is null in at least one container definition.","severity":"Low","details":"This control checks if the latest active Amazon ECS task definition has a logging configuration specified. The control fails if the task definition doesn't have the `logConfiguration` property defined or if the value for `logDriver` is null in at least one container definition.  \n  \nLogging helps you maintain the reliability, availability, and performance of Amazon ECS. Collecting data from task definitions provides visibility, which can help you debug processes and find the root cause of errors. If you are using a logging solution that does not have to be defined in the ECS task definition (such as a third party logging solution), you can disable this control after ensuring that your logs are properly captured and delivered.","component":"AWS Security Hub","image":"","remediation":"To define a log configuration for your Amazon ECS task definitions, see [Specifying a log configuration in your task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using%5Fawslogs.html#specify-log-config)in the _Amazon Elastic Container Service Developer Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":282,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"c49c8bda-5508-5d16-8970-e41ce14dbaba","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":259,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"e390da1f-fb32-5b7a-8e32-930fe5ea7427","name":"Secrets Manager secrets should be rotated within a specified number of days","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an AWS Secrets Manager secret is rotated at least once within the specified time frame. The control fails if a secret isn't rotated at least this frequently. Unless you provide a custom parameter value for the rotation period, Security Hub uses a default value of 90 days.","severity":"Low","details":"This control checks whether an AWS Secrets Manager secret is rotated at least once within the specified time frame. The control fails if a secret isn't rotated at least this frequently. Unless you provide a custom parameter value for the rotation period, Security Hub uses a default value of 90 days.  \n  \nRotating secrets can help you to reduce the risk of an unauthorized use of your secrets in your AWS account. Examples include database credentials, passwords, third-party API keys, and even arbitrary text. If you do not change your secrets for a long period of time, the secrets are more likely to be compromised.  \n  \nAs more users get access to a secret, it can become more likely that someone mishandled and leaked it to an unauthorized entity. Secrets can be leaked through logs and cache data. They can be shared for debugging purposes and not changed or revoked once the debugging completes. For all these reasons, secrets should be rotated frequently.  \n  \nYou can configure automatic rotation for secrets in AWS Secrets Manager. With automatic rotation, you can replace long-term secrets with short-term ones, significantly reducing the risk of compromise. We recommend that you configure automatic rotation for your Secrets Manager secrets. For more information, see [Rotating your AWS Secrets Manager secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html) in the _AWS Secrets Manager User Guide_.","component":"AWS Security Hub","image":"","remediation":"To turn on automatic rotation for Secrets Manager secrets, see [Set up automatic rotation for AWS Secrets Manager secrets using the console](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets%5Fturn-on-for-other.html) in the _AWS Secrets Manager User Guide_. You must choose and configure an AWS Lambda function for rotation.","type":"aws","enable":false,"keyphrase":[3]},{"id":262,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"de3009ef-f923-5505-8842-6553c708d0cf","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":323,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"6cbcea07-423b-5dfd-b8ae-d4aba1b7f79c","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Low","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":261,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"306a76df-9ff7-50b4-a1ec-2e4fbf8d9800","name":"Redshift Public Access","service":"AWS Security Hub","phase":"r","description":"Amazon Redshift clusters should prohibit public access\r\n\r\nThis control checks whether Amazon Redshift clusters are publicly accessible. It evaluates the PubliclyAccessible field in the cluster configuration item.","severity":"Low","details":"This control checks whether Amazon Redshift clusters are publicly accessible. It evaluates the `PubliclyAccessible` field in the cluster configuration item.   \r\n  \r\nThe `PubliclyAccessible` attribute of the Amazon Redshift cluster configuration indicates whether the cluster is publicly accessible. When the cluster is configured with `PubliclyAccessible` set to `true`, it is an Internet-facing instance that has a publicly resolvable DNS name, which resolves to a public IP address.  \r\n  \r\nWhen the cluster is not publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. Unless you intend for your cluster to be publicly accessible, the cluster should not be configured with `PubliclyAccessible` set to `true`.","component":"AWS Security Hub","image":"-","remediation":"To update an Amazon Redshift cluster to disable public access, see [Modifying a cluster](https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-console.html#modify-cluster) in the _Amazon Redshift Management Guide_. Set **Publicly accessible** to **No**.","type":"aws","enable":false,"keyphrase":[3]},{"id":263,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"6f1dd6f0-176d-568c-8de0-08bb21508eb4","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":264,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"6d03bfdc-0068-5553-a0f8-c4f2d1707634","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":265,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"31d328e3-6ab9-5294-9f8d-3703cd408da9","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":267,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"c5cb4c33-21af-51bc-98c0-faae77b2e1f7","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":268,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"2a9ea9ab-564a-5ae7-8877-d88b114b770b","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":269,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d1ee252f-be57-5a55-ad32-edf485dd99db","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":311,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"e4e533b8-4abe-5c88-86a7-4c753ac990a1","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":272,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d9026c9d-e5df-5445-a50a-9e7d134b9646","name":"Unused IAM user credentials should be removed","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether your IAM users have passwords or active access keys that have not been used for 90 days.","severity":"Low","details":"This control checks whether your IAM users have passwords or active access keys that have not been used for 90 days.  \n  \nIAM users can access AWS resources using different types of credentials, such as passwords or access keys.   \n  \nSecurity Hub recommends that you remove or deactivate all credentials that were unused for 90 days or more. Disabling or removing unnecessary credentials reduces the window of opportunity for credentials associated with a compromised or abandoned account to be used.  \n  \n###### Note\n\nAWS Config should be enabled in all Regions in which you use Security Hub. However, global resource recording can be enabled in a single Region. If you only record global resources in a single Region, then you can disable this control in all Regions except the Region where you record global resources.","component":"AWS Security Hub","image":"","remediation":"When you view user information in the IAM console, there are columns for**Access key age**, **Password age**, and **Last activity**. If the value in any of these columns is greater than 90 days, make the credentials for those users inactive.  \n  \nYou can also use [credential reports](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fgetting-report.html#getting-credential-reports-console) to monitor users and identify those with no activity for 90 or more days. You can download credential reports in `.csv` format from the IAM console.  \n  \nAfter you identify the inactive accounts or unused credentials, deactivate them. For instructions, see [Creating, changing, or deleting an IAM user password (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fpasswords%5Fadmin-change-user.html#id%5Fcredentials%5Fpasswords%5Fadmin-change-user%5Fconsole) in the _IAM User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":273,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"b02db676-a9a4-5575-8a7f-b3017c0dd03f","name":"IAM customer managed policies should not allow decryption actions on all KMS keys","service":"AWS Security Hub","phase":"Recon","description":"Checks whether the default version of IAM customer managed policies allow principals to use the AWS KMS decryption actions on all resources. The control fails if the policy is open enough to allow kms:Decrypt or kms:ReEncryptFrom actions on all KMS keys.","severity":"Low","details":"Checks whether the default version of IAM customer managed policies allow principals to use the AWS KMS decryption actions on all resources. The control fails if the policy is open enough to allow `kms:Decrypt` or `kms:ReEncryptFrom` actions on all KMS keys.  \n  \nThe control only checks KMS keys in the Resource element and doesn't take into account any conditionals in the Condition element of a policy. In addition, the control evaluates both attached and unattached customer managed policies. It doesn't check inline policies or AWS managed policies.  \n  \nWith AWS KMS, you control who can use your KMS keys and gain access to your encrypted data. IAM policies define which actions an identity (user, group, or role) can perform on which resources. Following security best practices, AWS recommends that you allow least privilege. In other words, you should grant to identities only the `kms:Decrypt` or `kms:ReEncryptFrom` permissions and only for the keys that are required to perform a task. Otherwise, the user might use keys that are not appropriate for your data.  \n  \nInstead of granting permissions for all keys, determine the minimum set of keys that users need to access encrypted data. Then design policies that allow users to use only those keys. For example, do not allow `kms:Decrypt` permission on all KMS keys. Instead, allow `kms:Decrypt` only on keys in a particular Region for your account. By adopting the principle of least privilege, you can reduce the risk of unintended disclosure of your data.","component":"AWS Security Hub","image":"","remediation":"To modify an IAM customer managed policy, see [Editing customer managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access%5Fpolicies%5Fmanage-edit.html#edit-managed-policy-console) in the _IAM User Guide_. When editing your policy, for the `Resource` field, provide the Amazon Resource Name (ARN) of the specific key or keys that you want to allow decryption actions on.","type":"aws","enable":false,"keyphrase":[3]},{"id":274,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"4fd59d92-0791-5c68-a09e-5b12c4563c58","name":"IAM customer managed policies that you create should not allow wildcard actions for services","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether the IAM identity-based policies that you create have Allow statements that use the * wildcard to grant permissions for all actions on any service. The control fails if any policy statement includes \"Effect\": \"Allow\" with \"Action\": \"Service:*\".","severity":"Low","details":"This control checks whether the IAM identity-based policies that you create have Allow statements that use the \\* wildcard to grant permissions for all actions on any service. The control fails if any policy statement includes `\"Effect\": \"Allow\"` with `\"Action\": \"Service:*\"`.   \n  \nFor example, the following statement in a policy results in a failed finding.  \n  \n`\"Statement\": [ { \"Sid\": \"EC2-Wildcard\", \"Effect\": \"Allow\", \"Action\": \"ec2:*\", \"Resource\": \"*\" }`  \n  \nThe control also fails if you use `\"Effect\": \"Allow\"` with `` \"NotAction\": \"`service`:*\" ``. In that case, the `NotAction` element provides access to all of the actions in an AWS service, except for the actions specified in `NotAction`.  \n  \nThis control only applies to customer managed IAM policies. It does not apply to IAM policies that are managed by AWS.  \n  \nWhen you assign permissions to AWS services, it is important to scope the allowed IAM actions in your IAM policies. You should restrict IAM actions to only those actions that are needed. This helps you to provision least privilege permissions. Overly permissive policies might lead to privilege escalation if the policies are attached to an IAM principal that might not require the permission.  \n  \nIn some cases, you might want to allow IAM actions that have a similar prefix, such as `DescribeFlowLogs` and `DescribeAvailabilityZones`. In these authorized cases, you can add a suffixed wildcard to the common prefix. For example, `ec2:Describe*`.  \n  \nThis control passes if you use a prefixed IAM action with a suffixed wildcard. For example, the following statement in a policy results in a passed finding.  \n  \n`\"Statement\": [ { \"Sid\": \"EC2-Wildcard\", \"Effect\": \"Allow\", \"Action\": \"ec2:Describe*\", \"Resource\": \"*\" }`  \n  \nWhen you group related IAM actions in this way, you can also avoid exceeding the IAM policy size limits.  \n  \n###### Note\n\nAWS Config should be enabled in all Regions in which you use Security Hub. However, global resource recording can be enabled in a single Region. If you only record global resources in a single Region, then you can disable this control in all Regions except the Region where you record global resources.","component":"AWS Security Hub","image":"","remediation":"To remediate this issue, update your IAM policies so that they do not allow full \"\\*\" administrative privileges. For details about how to edit an IAM policy, see [Editing IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access%5Fpolicies%5Fmanage-edit.html) in the _IAM User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":275,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"4020be58-a075-5771-a48c-a6c9efc2e448","name":"Lambda Unsupported Runtime","service":"AWS Security Hub","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Low","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":277,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"2f5cb903-b66d-5cf7-a173-9550f1d2e93f","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":278,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"8221f9fd-69fb-56a8-b995-2eb733c22d36","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":280,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"d6b51568-babc-5a25-b662-b7ed9f3a334f","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":279,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"05fec777-9fce-5117-a5bc-80334247b930","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":284,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"e4e533b8-4abe-5c88-86a7-4c753ac990a1","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":285,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"0c5c9952-e5a2-50be-bf2b-908a7349efc3","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":286,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"627abe01-4167-53d1-85c0-c592226b7c82","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":287,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"f1134f60-b27a-5732-96cb-baff120c93fa","name":"Macie should be enabled","service":"AWS Security Hub","phase":"Recon","description":"Empty","severity":"Low","details":"To enable Macie, see [Enable Macie](https://docs.aws.amazon.com/macie/latest/user/getting-started.html#enable-macie) in the _Amazon Macie User Guide_.","component":"AWS Security Hub","image":"","remediation":"To enable Macie, see [Enable Macie](https://docs.aws.amazon.com/macie/latest/user/getting-started.html#enable-macie) in the _Amazon Macie User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":283,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"2767ce18-2d89-523b-9ba5-a51a2a509a92","name":"Security group has Risky Port Access","service":"AWS Security Hub","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":291,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"65e85463-691b-5bb7-8352-143cc5527dbb","name":"Lambda Public Access","service":"AWS Lambda","phase":"r","description":"Lambda function policies should prohibit public access\r\n\r\nThis control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as AWS:SourceAccount. We recommend using other S3 conditions along with AWS:SourceAccount in your bucket policy for more refined access.","severity":"Low","details":"This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The control fails if public access is permitted. The control also fails if a Lambda function is invoked from Amazon S3, and the policy doesn't include a condition to limit public access, such as `AWS:SourceAccount`. We recommend using other S3 conditions along with `AWS:SourceAccount` in your bucket policy for more refined access.  \r\n  \r\nThe Lambda function should not be publicly accessible, as this may allow unintended access to your function code.","component":"AwsFunction","image":"--","remediation":"To remediate this issue, you must update your function's resource-based policy to remove permissions or to add the`AWS:SourceAccount` condition. You can only update the resource-based policy from the Lambda API or AWS CLI.  \r\n  \r\nTo start, [ review the resource-based policy](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html) on the Lambda console. Identify the policy statement that has`Principal` field values that make the policy public, such as `\"*\"` or `{ \"AWS\": \"*\" }`.  \r\n  \r\nYou cannot edit the policy from the console. To remove permissions from the function, run the [remove-permission](https://docs.aws.amazon.com/cli/latest/reference/lambda/remove-permission.html) command from the AWS CLI.  \r\n  \r\n`` $ aws lambda remove-permission --function-name `<function-name>` --statement-id `<statement-id>` ``  \r\n  \r\nReplace `` `<function-name>` `` with the name of the Lambda function, and `` `<statement-id>` `` with the statement ID (`Sid`) of the statement that you want to remove.","type":"aws","enable":false,"keyphrase":[3]},{"id":289,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"053a67ff-4c56-5f1d-801f-e99e4e0a2f71","name":"Lambda Unsupported Runtime","service":"AWS Lambda","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Low","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":294,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"3c8b95a6-afbd-5b9a-8f27-794c4f3ba858","name":"Stopped EC2 instances should be removed after a specified time period","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 instance has been stopped for longer than the allowed number of days. The control fails if an EC2 instance is stopped for longer than the maximum allowed time period. Unless you provide a custom parameter value for the maximum allowed time period, Security Hub uses a default value of 30 days.","severity":"Low","details":"This control checks whether an Amazon EC2 instance has been stopped for longer than the allowed number of days. The control fails if an EC2 instance is stopped for longer than the maximum allowed time period. Unless you provide a custom parameter value for the maximum allowed time period, Security Hub uses a default value of 30 days.  \n  \nWhen an EC2 instance has not run for a significant period of time, it creates a security risk because the instance is not being actively maintained (analyzed, patched, updated). If it is later launched, the lack of proper maintenance could result in unexpected issues in your AWS environment. To safely maintain an EC2 instance over time in an inactive state, start it periodically for maintenance and then stop it after maintenance. Ideally, this should be an automated process.","component":"AwsInstance","image":"","remediation":"To terminate an inactive EC2 instance, see [Terminate an instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#terminating-instances-console) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":295,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"885ab0ff-adca-5e98-a3ec-b215d68924b5","name":"Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service","service":"Amazon EC2","phase":"Recon","description":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.","severity":"Low","details":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.   \n  \nThis control evaluates resources in single account. It cannot describe resources that are outside of the account. Because AWS Config and Security Hub do not conduct cross-account checks, you will see `FAILED` findings for VPCs that are shared across accounts. Security Hub recommends that you suppress these `FAILED` findings.  \n  \nTo improve the security posture of your VPC, you can configure Amazon EC2 to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to access Amazon EC2 API operations privately. It restricts all network traffic between your VPC and Amazon EC2 to the Amazon network. Because endpoints are supported within the same Region only, you cannot create an endpoint between a VPC and a service in a different Region. This prevents unintended Amazon EC2 API calls to other Regions.   \n  \nTo learn more about creating VPC endpoints for Amazon EC2, see [Amazon EC2 and interface VPC endpoints ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html)in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsSubnet","image":"","remediation":"To create an interface endpoint to Amazon EC2 from the Amazon VPC console, see [Create a VPC endpoint ](https://docs.aws.amazon.com/vpc/latest/privatelink/create-interface-endpoint.html#create-interface-endpoint-aws)in the _AWS PrivateLink Guide_. For **Service name**, choose**com.amazonaws.`region`.ec2**.  \n  \nYou can also create and attach an endpoint policy to your VPC endpoint to control access to the Amazon EC2 API. For instructions on creating a VPC endpoint policy, see[Create an endpoint policy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html#endpoint-policy) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":296,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"de3009ef-f923-5505-8842-6553c708d0cf","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":324,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b0e74bd6-8f00-5ef7-915e-3f9adc440a1b","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Low","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":297,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"6f1dd6f0-176d-568c-8de0-08bb21508eb4","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":298,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"6d03bfdc-0068-5553-a0f8-c4f2d1707634","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":299,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"31d328e3-6ab9-5294-9f8d-3703cd408da9","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":301,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"c5cb4c33-21af-51bc-98c0-faae77b2e1f7","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":302,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"2a9ea9ab-564a-5ae7-8877-d88b114b770b","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":303,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"d1ee252f-be57-5a55-ad32-edf485dd99db","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":304,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"2f5cb903-b66d-5cf7-a173-9550f1d2e93f","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":305,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8221f9fd-69fb-56a8-b995-2eb733c22d36","name":"Security groups should only allow unrestricted incoming traffic for authorized ports","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:","severity":"Low","details":"This control checks whether an Amazon EC2 security group permits unrestricted incoming traffic from unauthorized ports. The control status is determined as follows:  \n  \n* If you use the default value for `authorizedTcpPorts`, the control fails if the security group permits unrestricted incoming traffic from any port other than ports 80 and 443.\n* If you provide custom values for `authorizedTcpPorts` or `authorizedUdpPorts`, the control fails if the security group permits unrestricted incoming traffic from any unlisted port.\n* If no parameter is used, the control fails for any security group that has an unrestricted inbound traffic rule.\n  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data. Unless a port is specifically allowed, the port should deny unrestricted access.","component":"AwsSecurityGroup","image":"","remediation":"To modify a security group, see [Work with security groups](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-security-groups.html) in the _Amazon VPC User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":312,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"0c5c9952-e5a2-50be-bf2b-908a7349efc3","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":309,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"c49c8bda-5508-5d16-8970-e41ce14dbaba","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 22","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 22\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 22.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 22\\. Removing unfettered connectivity to remote console services, such as SSH, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 22, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 22.","type":"aws","enable":false,"keyphrase":[3]},{"id":308,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"dcea8b02-78dd-5de7-95f1-628f7bea2b84","name":"Security group has Risky Port Access","service":"Amazon EC2","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":307,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"d6b51568-babc-5a25-b662-b7ed9f3a334f","name":"Security group has Risky Port Access","service":"Amazon EC2","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":306,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"05fec777-9fce-5117-a5bc-80334247b930","name":"Security group has Risky Port Access","service":"Amazon EC2","phase":"r","description":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:","severity":"Low","details":"Security groups provide stateful filtering of ingress and egress network traffic to AWS resources. Unrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data. No security group should allow unrestricted ingress access to the following ports:  \r\n  \r\n* 20, 21 (FTP)\r\n* 22 (SSH)\r\n* 23 (Telnet)\r\n* 25 (SMTP)\r\n* 110 (POP3)\r\n* 135 (RPC)\r\n* 143 (IMAP)\r\n* 445 (CIFS)\r\n* 1433, 1434 (MSSQL)\r\n* 3000 (Go, Node.js, and Ruby web development frameworks)\r\n* 3306 (mySQL)\r\n* 3389 (RDP)\r\n* 4333 (ahsp)\r\n* 5000 (Python web development frameworks)\r\n* 5432 (postgresql)\r\n* 5500 (fcp-addr-srvr1)\r\n* 5601 (OpenSearch Dashboards)\r\n* 8080 (proxy)\r\n* 8088 (legacy HTTP port)\r\n* 8888 (alternative HTTP port)\r\n* 9200 or 9300 (OpenSearch)","component":"AwsSecurityGroup","image":"-","remediation":"To delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":313,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"627abe01-4167-53d1-85c0-c592226b7c82","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":314,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"d4b2b8b8-6ab3-5bc5-a03e-447851de052c","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":315,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"1fa25188-a509-5b57-ac0a-7f8f11b5cbe6","name":"Security groups should not allow ingress from 00.0.0/0 or ::/0 to port 3389","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.","severity":"Low","details":"This control checks whether an Amazon EC2 security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389\\. The control fails if the security group allows ingress from 0.0.0.0/0 or ::/0 to port 3389.  \n  \nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. We recommend that no security group allow unrestricted ingress access to port 3389\\. Removing unfettered connectivity to remote console services, such as RDP, reduces a server's exposure to risk.","component":"AwsSecurityGroup","image":"","remediation":"To prohibit ingress to port 3389, remove the rule that allows such access for each security group associated with a VPC. For instructions, see [Update security group rules](https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html#updating-security-group-rules) in the_Amazon VPC User Guide_. After selecting a security group in the Amazon VPC Console, choose **Actions, Edit inbound rules**. Remove the rule that allows access to port 3389.","type":"aws","enable":false,"keyphrase":[3]},{"id":316,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b9ff9d1f-514d-54bb-bd78-1fbee571718c","name":"Amazon EC2 instances should not use multiple ENIs","service":"Amazon EC2","phase":"Recon","description":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.","severity":"Low","details":"This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs. This control also fails if an EC2 instance that belongs to an Amazon EKS cluster uses more than one ENI. If your EC2 instances need to have multiple ENIs as part of an Amazon EKS cluster, you can suppress those control findings.  \n  \nMultiple ENIs can cause dual-homed instances, meaning instances that have multiple subnets. This can add network security complexity and introduce unintended network paths and access.","component":"AwsInstance","image":"","remediation":"To detach a network interface from an EC2 instance, see [Detach a network interface from an instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#detach%5Feni) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":317,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"a23b0771-6325-55dd-91e5-42f48f3951e0","name":"Amazon EC2 instances should not have a public IPv4 address","service":"Amazon EC2","phase":"Recon","description":"This control checks whether EC2 instances have a public IP address. The control fails if the publicIp field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.","severity":"Low","details":"This control checks whether EC2 instances have a public IP address. The control fails if the `publicIp` field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.   \n  \nA public IPv4 address is an IP address that is reachable from the internet. If you launch your instance with a public IP address, then your EC2 instance is reachable from the internet. A private IPv4 address is an IP address that is not reachable from the internet. You can use private IPv4 addresses for communication between EC2 instances in the same VPC or in your connected private network.  \n  \nIPv6 addresses are globally unique, and therefore are reachable from the internet. However, by default all subnets have the IPv6 addressing attribute set to false. For more information about IPv6, see [IP addressing in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html) in the _Amazon VPC User Guide_.  \n  \nIf you have a legitimate use case to maintain EC2 instances with public IP addresses, then you can suppress the findings from this control. For more information about front-end architecture options, see the [AWS Architecture Blog](https://aws.amazon.com/blogs/architecture/) or the [This Is My Architecture series](https://aws.amazon.com/this-is-my-architecture/?tma.sort-by=item.additionalFields.airDate&tma.sort-order=desc&awsf.category=categories%23mobile).","component":"AwsInstance","image":"","remediation":"Use a non-default VPC so that your instance is not assigned a public IP address by default.  \n  \nWhen you launch an EC2 instance into a default VPC, it is assigned a public IP address. When you launch an EC2 instance into a non-default VPC, the subnet configuration determines whether it receives a public IP address. The subnet has an attribute to determine if new EC2 instances in the subnet receive a public IP address from the public IPv4 address pool.  \n  \nYou cannot manually associate or disassociate an automatically-assigned public IP address from your EC2 instance. To control whether your EC2 instance receives a public IP address, do one of the following:  \n  \n* Modify the public IP addressing attribute of your subnet. For more information, see [Modifying the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip) in the _Amazon VPC User Guide_.\n* Enable or disable the public IP addressing feature during launch. This overrides the subnet's public IP addressing attribute. For more information, see[ Assign a public IPv4 address during instance launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#public-ip-addresses) in the_Amazon EC2 User Guide for Linux Instances_.\n  \n  \nFor more information, see [Public IPv4 addresses and external DNS hostnames](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses) in the _Amazon EC2 User Guide for Linux Instances_.  \n  \nIf your EC2 instance is associated with an Elastic IP address, then your EC2 instance is reachable from the internet. You can disassociate an Elastic IP address from an instance or network interface at any time. To disassociate an Elastic IP address, see [Disassociate an Elastic IP address ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#using-instance-addressing-eips-associating-different) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":318,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"16934762-83fb-5501-945b-87c4f5a4a838","name":"EC2 instances should use Instance Metadata Service Version 2 (IMDSv2)","service":"Amazon EC2","phase":"Recon","description":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if HttpTokens is set to required for IMDSv2. The control fails if HttpTokens is set to optional.","severity":"Low","details":"This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if `HttpTokens` is set to required for IMDSv2\\. The control fails if `HttpTokens` is set to `optional`.  \n  \nYou use instance metadata to configure or manage the running instance. The IMDS provides access to temporary, frequently rotated credentials. These credentials remove the need to hard code or distribute sensitive credentials to instances manually or programmatically. The IMDS is attached locally to every EC2 instance. It runs on a special \"link local\" IP address of 169.254.169.254\\. This IP address is only accessible by software that runs on the instance.  \n  \nVersion 2 of the IMDS adds new protections for the following types of vulnerabilities. These vulnerabilities could be used to try to access the IMDS.  \n  \n* Open website application firewalls\n* Open reverse proxies\n* Server-side request forgery (SSRF) vulnerabilities\n* Open Layer 3 firewalls and network address translation (NAT)\n  \n  \nSecurity Hub recommends that you configure your EC2 instances with IMDSv2.","component":"AwsInstance","image":"","remediation":"To configure EC2 instances with IMDSv2, see [Recommended path to requiring IMDSv2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-metadata-transition-to-version-2.html#recommended-path-for-requiring-imdsv2) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":319,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"5362481d-9928-5999-b03e-573fdc50357b","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Low","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":320,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8a44e426-9923-59de-a940-23ce4c72b441","name":"Amazon EC2 instances should be managed by AWS Systems Manager","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.","severity":"Low","details":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.  \n  \nTo help you to maintain security and compliance, Systems Manager scans your stopped and running managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances.  \n  \nTo learn more, see [_AWS Systems Manager User Guide_](https://docs.aws.amazon.com/systems-manager/latest/userguide/what-is-systems-manager.html).","component":"AwsInstance","image":"","remediation":"To manage EC2 instances with Systems Manager, see [Amazon EC2 host management](https://docs.aws.amazon.com/systems-manager/latest/userguide/quick-setup-host-management.html) in the _AWS Systems Manager User Guide_. In the **Configuration options** section, you can keep the default choices or change them as necessary for your preferred configuration.","type":"aws","enable":false,"keyphrase":[3]},{"id":321,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"2cadfcd4-a859-5abd-91b6-177a4d33e055","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Low","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":322,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8728c06a-8e1d-5484-a93a-4c5ec758cf33","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Low","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":325,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b675a7ef-55ed-5cbb-bf41-925e56959f14","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Low","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":192,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"47fe8bd0-0911-58d0-9303-e005b3ca9aa1","name":"VPC flow logging should be enabled in all VPCs","service":"Amazon EC2","phase":"Recon","description":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to Reject.","severity":"Medium","details":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to `Reject`.   \n  \nWith the VPC Flow Logs feature, you can capture information about the IP address traffic going to and from network interfaces in your VPC. After you create a flow log, you can view and retrieve its data in CloudWatch Logs. To reduce cost, you can also send your flow logs to Amazon S3\\.   \n  \nSecurity Hub recommends that you enable flow logging for packet rejects for VPCs. Flow logs provide visibility into network traffic that traverses the VPC and can detect anomalous traffic or provide insight during security workflows.  \n  \nBy default, the record includes values for the different components of the IP address flow, including the source, destination, and protocol. For more information and descriptions of the log fields, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html) in the _Amazon VPC User Guide_.","component":"AwsLocalGateway","image":"","remediation":"To create a VPC Flow Log, see [Create a Flow Log](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-flow-logs.html#create-flow-log) in the _Amazon VPC User Guide_. After you open the Amazon VPC console, choose **Your VPCs**. For**Filter**, choose **Reject** or**All**.","type":"aws","enable":false,"keyphrase":[3]},{"id":197,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"d7ba5452-57b5-5876-9c1e-826ce1bf243b","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Medium","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":178,"card_id":"6023a4d1-15a5-4358-adc3-c572f5753bf3","find_id":"b574f7e9-ea00-5c8a-aad4-3a994c32e6d9","name":"Lambda Unsupported Runtime","service":"AWS Lambda","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Medium","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":191,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"fd28c50a-4a8e-526b-a2f4-49e2cfdd7ded","name":"VPC flow logging should be enabled in all VPCs","service":"Amazon EC2","phase":"Recon","description":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to Reject.","severity":"Medium","details":"This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to `Reject`.   \n  \nWith the VPC Flow Logs feature, you can capture information about the IP address traffic going to and from network interfaces in your VPC. After you create a flow log, you can view and retrieve its data in CloudWatch Logs. To reduce cost, you can also send your flow logs to Amazon S3\\.   \n  \nSecurity Hub recommends that you enable flow logging for packet rejects for VPCs. Flow logs provide visibility into network traffic that traverses the VPC and can detect anomalous traffic or provide insight during security workflows.  \n  \nBy default, the record includes values for the different components of the IP address flow, including the source, destination, and protocol. For more information and descriptions of the log fields, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html) in the _Amazon VPC User Guide_.","component":"AwsSubnet","image":"","remediation":"To create a VPC Flow Log, see [Create a Flow Log](https://docs.aws.amazon.com/vpc/latest/userguide/working-with-flow-logs.html#create-flow-log) in the _Amazon VPC User Guide_. After you open the Amazon VPC console, choose **Your VPCs**. For**Filter**, choose **Reject** or**All**.","type":"aws","enable":false,"keyphrase":[3]},{"id":190,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"498db037-7272-5966-ac7b-e0c0a8b19900","name":"Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service","service":"Amazon EC2","phase":"Recon","description":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.","severity":"Medium","details":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.   \n  \nThis control evaluates resources in single account. It cannot describe resources that are outside of the account. Because AWS Config and Security Hub do not conduct cross-account checks, you will see `FAILED` findings for VPCs that are shared across accounts. Security Hub recommends that you suppress these `FAILED` findings.  \n  \nTo improve the security posture of your VPC, you can configure Amazon EC2 to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to access Amazon EC2 API operations privately. It restricts all network traffic between your VPC and Amazon EC2 to the Amazon network. Because endpoints are supported within the same Region only, you cannot create an endpoint between a VPC and a service in a different Region. This prevents unintended Amazon EC2 API calls to other Regions.   \n  \nTo learn more about creating VPC endpoints for Amazon EC2, see [Amazon EC2 and interface VPC endpoints ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html)in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsLocalGateway","image":"","remediation":"To create an interface endpoint to Amazon EC2 from the Amazon VPC console, see [Create a VPC endpoint ](https://docs.aws.amazon.com/vpc/latest/privatelink/create-interface-endpoint.html#create-interface-endpoint-aws)in the _AWS PrivateLink Guide_. For **Service name**, choose**com.amazonaws.`region`.ec2**.  \n  \nYou can also create and attach an endpoint policy to your VPC endpoint to control access to the Amazon EC2 API. For instructions on creating a VPC endpoint policy, see[Create an endpoint policy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html#endpoint-policy) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":201,"card_id":"None","find_id":"c048ad19-ce6a-5ea9-bc13-d6bd457f959e","name":"DynamoDB tables should automatically scale capacity with demand","service":"aws","phase":"Recon","description":"This control checks whether an Amazon DynamoDB table can scale its read and write capacity as needed. The control fails if the table doesn't use on-demand capacity mode or provisioned mode with auto scaling configured. By default, this control only requires that one of these modes be configured, without regard to specific levels of read or write capacity. Optionally, you can provide custom parameter values to require specific levels of read and write capacity or target utilization.","severity":"Medium","details":"This control checks whether an Amazon DynamoDB table can scale its read and write capacity as needed. The control fails if the table doesn't use on-demand capacity mode or provisioned mode with auto scaling configured. By default, this control only requires that one of these modes be configured, without regard to specific levels of read or write capacity. Optionally, you can provide custom parameter values to require specific levels of read and write capacity or target utilization.  \n  \nScaling capacity with demand avoids throttling exceptions, which helps to maintain availability of your applications. DynamoDB tables in on-demand capacity mode are only limited by the DynamoDB throughput default table quotas. To raise these quotas, you can file a support ticket with AWS Support.DynamoDB tables in provisioned mode with auto scaling adjust the provisioned throughput capacity dynamically in response to traffic patterns. For more information about DynamoDB request throttling, see [Request throttling and burst capacity](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html#ProvisionedThroughput.Throttling) in the _Amazon DynamoDB Developer Guide_.","component":"securityhub","image":"","remediation":"To enable DynamoDB automatic scaling on existing tables in capacity mode, see [Enabling DynamoDB auto scaling on existing tables](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.Console.html#AutoScaling.Console.ExistingTable) in the_Amazon DynamoDB Developer Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":202,"card_id":"None","find_id":"ac58eeda-4975-55cc-8ea7-f4e81e1fcd9e","name":"The default stateless action for Network Firewall policies should be drop or forward for full packets","service":"aws","phase":"Recon","description":"This control checks whether the default stateless action for full packets for a Network Firewall policy is drop or forward. The control passes if Drop or Forward is selected, and fails if Pass is selected.","severity":"Medium","details":"This control checks whether the default stateless action for full packets for a Network Firewall policy is drop or forward. The control passes if `Drop` or `Forward` is selected, and fails if `Pass` is selected.  \n  \nA firewall policy defines how your firewall monitors and handles traffic in Amazon VPC. You configure stateless and stateful rule groups to filter packets and traffic flows. Defaulting to `Pass` can allow unintended traffic.","component":"securityhub","image":"","remediation":"To change your firewall policy, see [Updating a firewall policy](https://docs.aws.amazon.com/network-firewall/latest/developerguide/firewall-policy-updating.html) in the _AWS Network Firewall Developer Guide_. For **Stateless default actions**, choose **Edit**. Then, choose **Drop** or **Forward to stateful rule groups**as the **Action**.","type":"aws","enable":false,"keyphrase":[3]},{"id":189,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"776c327c-05ab-571e-ab3d-b3b5618ba052","name":"Amazon EC2 instances should be managed by AWS Systems Manager","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.","severity":"Medium","details":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.  \n  \nTo help you to maintain security and compliance, Systems Manager scans your stopped and running managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances.  \n  \nTo learn more, see [_AWS Systems Manager User Guide_](https://docs.aws.amazon.com/systems-manager/latest/userguide/what-is-systems-manager.html).","component":"AwsInstance","image":"","remediation":"To manage EC2 instances with Systems Manager, see [Amazon EC2 host management](https://docs.aws.amazon.com/systems-manager/latest/userguide/quick-setup-host-management.html) in the _AWS Systems Manager User Guide_. In the **Configuration options** section, you can keep the default choices or change them as necessary for your preferred configuration.","type":"aws","enable":false,"keyphrase":[3]},{"id":204,"card_id":"None","find_id":"4167f04c-0ac1-542f-8ee0-43935f311c2c","name":"Ensure IAM password policy requires at least one lowercase letter","service":"aws","phase":"Recon","description":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets. CIS recommends that the password policy require at least one lowercase letter. Setting a password complexity policy increases account resiliency against brute force login attempts.","severity":"Medium","details":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets. CIS recommends that the password policy require at least one lowercase letter. Setting a password complexity policy increases account resiliency against brute force login attempts.","component":"securityhub","image":"","remediation":"To change your password policy, see [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fpasswords%5Faccount-policy.html) in the _IAM User Guide_. For **Password strength**, select **Require at least one lowercase letter from the Latin alphabet (A–Z)**.","type":"aws","enable":false,"keyphrase":[3]},{"id":205,"card_id":"None","find_id":"7400bb8c-70c8-5f6e-a062-24d3d24c1dbc","name":"Kinesis streams should be encrypted at rest","service":"aws","phase":"Recon","description":"This control checks if Kinesis Data Streams are encrypted at rest with server-side encryption. This control fails if a Kinesis stream is not encrypted at rest with server-side encryption.","severity":"Medium","details":"This control checks if Kinesis Data Streams are encrypted at rest with server-side encryption. This control fails if a Kinesis stream is not encrypted at rest with server-side encryption.  \n  \nServer-side encryption is a feature in Amazon Kinesis Data Streams that automatically encrypts data before it's at rest by using an AWS KMS key. Data is encrypted before it's written to the Kinesis stream storage layer, and decrypted after it's retrieved from storage. As a result, your data is encrypted at rest within the Amazon Kinesis Data Streams service.","component":"securityhub","image":"","remediation":"For information about enabling server-side encryption for Kinesis streams, see [How do I get started with server-side encryption?](https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html) in the _Amazon Kinesis Developer Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":186,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8fc0fd47-b304-5936-abc7-a81248f9eb80","name":"Attached Amazon EBS volumes should be encrypted at-rest","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.","severity":"Medium","details":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.  \n  \nFor an added layer of security of your sensitive data in EBS volumes, you should enable EBS encryption at rest. Amazon EBS encryption offers a straightforward encryption solution for your EBS resources that doesn't require you to build, maintain, and secure your own key management infrastructure. It uses KMS keys when creating encrypted volumes and snapshots.  \n  \nTo learn more about Amazon EBS encryption, see [Amazon EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsVolume","image":"","remediation":"There's no direct way to encrypt an existing unencrypted volume or snapshot. You can only encrypt a new volume or snapshot when you create it.  \n  \nIf you enabled encryption by default, Amazon EBS encrypts the resulting new volume or snapshot using your default key for Amazon EBS encryption. Even if you have not enabled encryption by default, you can enable encryption when you create an individual volume or snapshot. In both cases, you can override the default key for Amazon EBS encryption and choose a symmetric customer managed key.  \n  \nFor more information, see [Creating an Amazon EBS volume](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html) and [Copying an Amazon EBS snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":208,"card_id":"None","find_id":"e390da1f-fb32-5b7a-8e32-930fe5ea7427","name":"Secrets Manager secrets should be rotated within a specified number of days","service":"aws","phase":"Recon","description":"This control checks whether an AWS Secrets Manager secret is rotated at least once within the specified time frame. The control fails if a secret isn't rotated at least this frequently. Unless you provide a custom parameter value for the rotation period, Security Hub uses a default value of 90 days.","severity":"Medium","details":"This control checks whether an AWS Secrets Manager secret is rotated at least once within the specified time frame. The control fails if a secret isn't rotated at least this frequently. Unless you provide a custom parameter value for the rotation period, Security Hub uses a default value of 90 days.  \n  \nRotating secrets can help you to reduce the risk of an unauthorized use of your secrets in your AWS account. Examples include database credentials, passwords, third-party API keys, and even arbitrary text. If you do not change your secrets for a long period of time, the secrets are more likely to be compromised.  \n  \nAs more users get access to a secret, it can become more likely that someone mishandled and leaked it to an unauthorized entity. Secrets can be leaked through logs and cache data. They can be shared for debugging purposes and not changed or revoked once the debugging completes. For all these reasons, secrets should be rotated frequently.  \n  \nYou can configure automatic rotation for secrets in AWS Secrets Manager. With automatic rotation, you can replace long-term secrets with short-term ones, significantly reducing the risk of compromise. We recommend that you configure automatic rotation for your Secrets Manager secrets. For more information, see [Rotating your AWS Secrets Manager secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html) in the _AWS Secrets Manager User Guide_.","component":"securityhub","image":"","remediation":"To turn on automatic rotation for Secrets Manager secrets, see [Set up automatic rotation for AWS Secrets Manager secrets using the console](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets%5Fturn-on-for-other.html) in the _AWS Secrets Manager User Guide_. You must choose and configure an AWS Lambda function for rotation.","type":"aws","enable":false,"keyphrase":[3]},{"id":183,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"f5d47d97-94eb-54f4-be52-e65fb90958ff","name":"Attached Amazon EBS volumes should be encrypted at-rest","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.","severity":"Medium","details":"This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.  \n  \nFor an added layer of security of your sensitive data in EBS volumes, you should enable EBS encryption at rest. Amazon EBS encryption offers a straightforward encryption solution for your EBS resources that doesn't require you to build, maintain, and secure your own key management infrastructure. It uses KMS keys when creating encrypted volumes and snapshots.  \n  \nTo learn more about Amazon EBS encryption, see [Amazon EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsVolume","image":"","remediation":"There's no direct way to encrypt an existing unencrypted volume or snapshot. You can only encrypt a new volume or snapshot when you create it.  \n  \nIf you enabled encryption by default, Amazon EBS encrypts the resulting new volume or snapshot using your default key for Amazon EBS encryption. Even if you have not enabled encryption by default, you can enable encryption when you create an individual volume or snapshot. In both cases, you can override the default key for Amazon EBS encryption and choose a symmetric customer managed key.  \n  \nFor more information, see [Creating an Amazon EBS volume](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html) and [Copying an Amazon EBS snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":213,"card_id":"None","find_id":"d9026c9d-e5df-5445-a50a-9e7d134b9646","name":"Unused IAM user credentials should be removed","service":"aws","phase":"Recon","description":"This control checks whether your IAM users have passwords or active access keys that have not been used for 90 days.","severity":"Medium","details":"This control checks whether your IAM users have passwords or active access keys that have not been used for 90 days.  \n  \nIAM users can access AWS resources using different types of credentials, such as passwords or access keys.   \n  \nSecurity Hub recommends that you remove or deactivate all credentials that were unused for 90 days or more. Disabling or removing unnecessary credentials reduces the window of opportunity for credentials associated with a compromised or abandoned account to be used.  \n  \n###### Note\n\nAWS Config should be enabled in all Regions in which you use Security Hub. However, global resource recording can be enabled in a single Region. If you only record global resources in a single Region, then you can disable this control in all Regions except the Region where you record global resources.","component":"securityhub","image":"","remediation":"When you view user information in the IAM console, there are columns for**Access key age**, **Password age**, and **Last activity**. If the value in any of these columns is greater than 90 days, make the credentials for those users inactive.  \n  \nYou can also use [credential reports](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fgetting-report.html#getting-credential-reports-console) to monitor users and identify those with no activity for 90 or more days. You can download credential reports in `.csv` format from the IAM console.  \n  \nAfter you identify the inactive accounts or unused credentials, deactivate them. For instructions, see [Creating, changing, or deleting an IAM user password (console)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fpasswords%5Fadmin-change-user.html#id%5Fcredentials%5Fpasswords%5Fadmin-change-user%5Fconsole) in the _IAM User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":214,"card_id":"None","find_id":"cd148500-666d-5ba8-b3dc-8e40d22296b4","name":"Ensure IAM password policy requires at least one symbol","service":"aws","phase":"Recon","description":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets.","severity":"Medium","details":"Password policies, in part, enforce password complexity requirements. Use IAM password policies to ensure that passwords use different character sets.  \n  \nCIS recommends that the password policy require at least one symbol. Setting a password complexity policy increases account resiliency against brute force login attempts.","component":"securityhub","image":"","remediation":"To change your password policy, see [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id%5Fcredentials%5Fpasswords%5Faccount-policy.html) in the _IAM User Guide_. For **Password strength**, select **Require at least one nonalphanumeric character**.","type":"aws","enable":false,"keyphrase":[3]},{"id":215,"card_id":"None","find_id":"af59db09-6abd-5687-9744-a63d207a6ef6","name":"Auto Scaling groups should use multiple instance types in multiple Availability Zones","service":"aws","phase":"Recon","description":"This control checks whether an Amazon EC2 Auto Scaling group uses multiple instance types. The control fails if the Auto Scaling group has only one instance type defined.","severity":"Medium","details":"This control checks whether an Amazon EC2 Auto Scaling group uses multiple instance types. The control fails if the Auto Scaling group has only one instance type defined.  \n  \nYou can enhance availability by deploying your application across multiple instance types running in multiple Availability Zones. Security Hub recommends using multiple instance types so that the Auto Scaling group can launch another instance type if there is insufficient instance capacity in your chosen Availability Zones.","component":"securityhub","image":"","remediation":"To create an Auto Scaling group with multiple instance types, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the _Amazon EC2 Auto Scaling User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":182,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b675a7ef-55ed-5cbb-bf41-925e56959f14","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Medium","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":216,"card_id":"None","find_id":"b02db676-a9a4-5575-8a7f-b3017c0dd03f","name":"IAM customer managed policies should not allow decryption actions on all KMS keys","service":"aws","phase":"Recon","description":"Checks whether the default version of IAM customer managed policies allow principals to use the AWS KMS decryption actions on all resources. The control fails if the policy is open enough to allow kms:Decrypt or kms:ReEncryptFrom actions on all KMS keys.","severity":"Medium","details":"Checks whether the default version of IAM customer managed policies allow principals to use the AWS KMS decryption actions on all resources. The control fails if the policy is open enough to allow `kms:Decrypt` or `kms:ReEncryptFrom` actions on all KMS keys.  \n  \nThe control only checks KMS keys in the Resource element and doesn't take into account any conditionals in the Condition element of a policy. In addition, the control evaluates both attached and unattached customer managed policies. It doesn't check inline policies or AWS managed policies.  \n  \nWith AWS KMS, you control who can use your KMS keys and gain access to your encrypted data. IAM policies define which actions an identity (user, group, or role) can perform on which resources. Following security best practices, AWS recommends that you allow least privilege. In other words, you should grant to identities only the `kms:Decrypt` or `kms:ReEncryptFrom` permissions and only for the keys that are required to perform a task. Otherwise, the user might use keys that are not appropriate for your data.  \n  \nInstead of granting permissions for all keys, determine the minimum set of keys that users need to access encrypted data. Then design policies that allow users to use only those keys. For example, do not allow `kms:Decrypt` permission on all KMS keys. Instead, allow `kms:Decrypt` only on keys in a particular Region for your account. By adopting the principle of least privilege, you can reduce the risk of unintended disclosure of your data.","component":"securityhub","image":"","remediation":"To modify an IAM customer managed policy, see [Editing customer managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access%5Fpolicies%5Fmanage-edit.html#edit-managed-policy-console) in the _IAM User Guide_. When editing your policy, for the `Resource` field, provide the Amazon Resource Name (ARN) of the specific key or keys that you want to allow decryption actions on.","type":"aws","enable":false,"keyphrase":[3]},{"id":218,"card_id":"None","find_id":"f1134f60-b27a-5732-96cb-baff120c93fa","name":"Macie should be enabled","service":"aws","phase":"Recon","description":"Empty","severity":"Medium","details":"To enable Macie, see [Enable Macie](https://docs.aws.amazon.com/macie/latest/user/getting-started.html#enable-macie) in the _Amazon Macie User Guide_.","component":"securityhub","image":"","remediation":"To enable Macie, see [Enable Macie](https://docs.aws.amazon.com/macie/latest/user/getting-started.html#enable-macie) in the _Amazon Macie User Guide_.","type":"aws","enable":false,"keyphrase":[3]},{"id":181,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"b0e74bd6-8f00-5ef7-915e-3f9adc440a1b","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Medium","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":180,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"6cbcea07-423b-5dfd-b8ae-d4aba1b7f79c","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Medium","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":247,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"3c8b95a6-afbd-5b9a-8f27-794c4f3ba858","name":"Stopped EC2 instances should be removed after a specified time period","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether an Amazon EC2 instance has been stopped for longer than the allowed number of days. The control fails if an EC2 instance is stopped for longer than the maximum allowed time period. Unless you provide a custom parameter value for the maximum allowed time period, Security Hub uses a default value of 30 days.","severity":"Medium","details":"This control checks whether an Amazon EC2 instance has been stopped for longer than the allowed number of days. The control fails if an EC2 instance is stopped for longer than the maximum allowed time period. Unless you provide a custom parameter value for the maximum allowed time period, Security Hub uses a default value of 30 days.  \n  \nWhen an EC2 instance has not run for a significant period of time, it creates a security risk because the instance is not being actively maintained (analyzed, patched, updated). If it is later launched, the lack of proper maintenance could result in unexpected issues in your AWS environment. To safely maintain an EC2 instance over time in an inactive state, start it periodically for maintenance and then stop it after maintenance. Ideally, this should be an automated process.","component":"AwsInstance","image":"","remediation":"To terminate an inactive EC2 instance, see [Terminate an instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#terminating-instances-console) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]},{"id":173,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"8a44e426-9923-59de-a940-23ce4c72b441","name":"Amazon EC2 instances should be managed by AWS Systems Manager","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.","severity":"Medium","details":"This control checks whether the stopped and running EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.  \n  \nTo help you to maintain security and compliance, Systems Manager scans your stopped and running managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances.  \n  \nTo learn more, see [_AWS Systems Manager User Guide_](https://docs.aws.amazon.com/systems-manager/latest/userguide/what-is-systems-manager.html).","component":"AwsInstance","image":"","remediation":"To manage EC2 instances with Systems Manager, see [Amazon EC2 host management](https://docs.aws.amazon.com/systems-manager/latest/userguide/quick-setup-host-management.html) in the _AWS Systems Manager User Guide_. In the **Configuration options** section, you can keep the default choices or change them as necessary for your preferred configuration.","type":"aws","enable":false,"keyphrase":[3]},{"id":155,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"4020be58-a075-5771-a48c-a6c9efc2e448","name":"Lambda Unsupported Runtime","service":"AWS Security Hub","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Medium","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":179,"card_id":"1f0f27d0-8bac-4054-9769-7acfec102cdd","find_id":"8728c06a-8e1d-5484-a93a-4c5ec758cf33","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"Amazon EC2","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Medium","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":172,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"5362481d-9928-5999-b03e-573fdc50357b","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Medium","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":156,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"053a67ff-4c56-5f1d-801f-e99e4e0a2f71","name":"Lambda Unsupported Runtime","service":"AWS Security Hub","phase":"r","description":"Lambda functions should use supported runtimes\r\n\r\nThis control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.","severity":"Medium","details":"This control checks that the AWS Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. The control checks function settings for the runtimes noted previously under parameters. The control fails if a Lambda function doesn't use a supported runtime.  \r\n  \r\nThe AWS Config rule ignores functions that have a package type of `Image`.  \r\n  \r\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.  \r\n  \r\nTo learn more about the supported runtimes that this control checks for the supported languages, see [AWS Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) in the _AWS Lambda Developer Guide_.","component":"AwsFunction","image":"-","remediation":"For more information about supported runtimes and deprecation schedules, see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) in the _AWS Lambda Developer Guide_. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.","type":"aws","enable":false,"keyphrase":[3]},{"id":174,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"2cadfcd4-a859-5abd-91b6-177a4d33e055","name":"Amazon EC2 subnets should not automatically assign public IP addresses","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.","severity":"Medium","details":"This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have `MapPublicIpOnLaunch` set to `FALSE`. The control passes if the flag is set to `FALSE`.   \n  \nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.","component":"AwsSubnet","image":"","remediation":"To configure a subnet to not assign public IP addresses, see [Modify the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/modify-subnets.html#subnet-public-ip) in the _Amazon VPC User Guide_. Clear the check box for **Enable auto-assign public IPv4 address**.","type":"aws","enable":false,"keyphrase":[3]},{"id":146,"card_id":"8d1ea160-3228-47e2-94b1-efc1ed087375","find_id":"885ab0ff-adca-5e98-a3ec-b215d68924b5","name":"Amazon EC2 should be configured to use VPC endpoints that are created for the Amazon EC2 service","service":"AWS Security Hub","phase":"Recon","description":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.","severity":"Medium","details":"This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.   \n  \nThis control evaluates resources in single account. It cannot describe resources that are outside of the account. Because AWS Config and Security Hub do not conduct cross-account checks, you will see `FAILED` findings for VPCs that are shared across accounts. Security Hub recommends that you suppress these `FAILED` findings.  \n  \nTo improve the security posture of your VPC, you can configure Amazon EC2 to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to access Amazon EC2 API operations privately. It restricts all network traffic between your VPC and Amazon EC2 to the Amazon network. Because endpoints are supported within the same Region only, you cannot create an endpoint between a VPC and a service in a different Region. This prevents unintended Amazon EC2 API calls to other Regions.   \n  \nTo learn more about creating VPC endpoints for Amazon EC2, see [Amazon EC2 and interface VPC endpoints ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html)in the _Amazon EC2 User Guide for Linux Instances_.","component":"AwsSubnet","image":"","remediation":"To create an interface endpoint to Amazon EC2 from the Amazon VPC console, see [Create a VPC endpoint ](https://docs.aws.amazon.com/vpc/latest/privatelink/create-interface-endpoint.html#create-interface-endpoint-aws)in the _AWS PrivateLink Guide_. For **Service name**, choose**com.amazonaws.`region`.ec2**.  \n  \nYou can also create and attach an endpoint policy to your VPC endpoint to control access to the Amazon EC2 API. For instructions on creating a VPC endpoint policy, see[Create an endpoint policy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/interface-vpc-endpoints.html#endpoint-policy) in the _Amazon EC2 User Guide for Linux Instances_.","type":"aws","enable":false,"keyphrase":[3]}]
